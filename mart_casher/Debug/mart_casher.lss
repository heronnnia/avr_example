
mart_casher.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00800100  00000eba  00000f4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000eba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000028  0080017a  0080017a  00000fc8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000fc8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001024  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00001060  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001197  00000000  00000000  000010d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000980  00000000  00000000  0000226f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000075e  00000000  00000000  00002bef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000184  00000000  00000000  00003350  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000058b  00000000  00000000  000034d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000977  00000000  00000000  00003a5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  000043d6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	4c c1       	rjmp	.+664    	; 0x2da <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea eb       	ldi	r30, 0xBA	; 186
  a0:	fe e0       	ldi	r31, 0x0E	; 14
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 37       	cpi	r26, 0x7A	; 122
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e7       	ldi	r26, 0x7A	; 122
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a2 3a       	cpi	r26, 0xA2	; 162
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	55 d2       	rcall	.+1194   	; 0x56e <main>
  c4:	f8 c6       	rjmp	.+3568   	; 0xeb6 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <_Z10init_PORTCv>:
#define ENABLE  (PORTC |= 0x04)
#define DISABLE (PORTC &= 0xFB)

void init_PORTC(void)
{
	DDRC = 0xff;
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	84 bb       	out	0x14, r24	; 20
	PORTC = 0xff;
  cc:	85 bb       	out	0x15, r24	; 21
  ce:	08 95       	ret

000000d0 <_Z14instrction_outh>:
}

void instrction_out(unsigned char b)
{
	PORTC = b&0xF0;
  d0:	98 2f       	mov	r25, r24
  d2:	90 7f       	andi	r25, 0xF0	; 240
  d4:	95 bb       	out	0x15, r25	; 21
	ENABLE;
  d6:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
  d8:	aa 98       	cbi	0x15, 2	; 21
	PORTC=((b<<4)&0xF0);
  da:	20 e1       	ldi	r18, 0x10	; 16
  dc:	82 9f       	mul	r24, r18
  de:	c0 01       	movw	r24, r0
  e0:	11 24       	eor	r1, r1
  e2:	85 bb       	out	0x15, r24	; 21
	ENABLE;
  e4:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
  e6:	aa 98       	cbi	0x15, 2	; 21
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
  e8:	80 e4       	ldi	r24, 0x40	; 64
  ea:	9f e1       	ldi	r25, 0x1F	; 31
  ec:	01 97       	sbiw	r24, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <_Z14instrction_outh+0x1c>
  f0:	08 95       	ret

000000f2 <_Z8char_outh>:
	_delay_ms(2);
}
void char_out(unsigned char b)
{
	PORTC=(b&0xF0)|0x01;
  f2:	98 2f       	mov	r25, r24
  f4:	90 7f       	andi	r25, 0xF0	; 240
  f6:	91 60       	ori	r25, 0x01	; 1
  f8:	95 bb       	out	0x15, r25	; 21
	ENABLE;
  fa:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
  fc:	aa 98       	cbi	0x15, 2	; 21
	PORTC=((b<<4)&0xF0)|0x01;
  fe:	20 e1       	ldi	r18, 0x10	; 16
 100:	82 9f       	mul	r24, r18
 102:	c0 01       	movw	r24, r0
 104:	11 24       	eor	r1, r1
 106:	81 60       	ori	r24, 0x01	; 1
 108:	85 bb       	out	0x15, r24	; 21
	ENABLE;
 10a:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
 10c:	aa 98       	cbi	0x15, 2	; 21
 10e:	80 e4       	ldi	r24, 0x40	; 64
 110:	9f e1       	ldi	r25, 0x1F	; 31
 112:	01 97       	sbiw	r24, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <_Z8char_outh+0x20>
 116:	08 95       	ret

00000118 <_Z10lcd_gotoxyhh>:
}
void lcd_gotoxy(unsigned char x, unsigned char y)
{
	// 16 * 2 Character LCD
	//  Busy();
	switch(y)
 118:	66 23       	and	r22, r22
 11a:	19 f0       	breq	.+6      	; 0x122 <_Z10lcd_gotoxyhh+0xa>
 11c:	61 30       	cpi	r22, 0x01	; 1
 11e:	21 f0       	breq	.+8      	; 0x128 <_Z10lcd_gotoxyhh+0x10>
 120:	08 95       	ret
	{
		case 0 : instrction_out(0x80+x); break;
 122:	80 58       	subi	r24, 0x80	; 128
 124:	d5 cf       	rjmp	.-86     	; 0xd0 <_Z14instrction_outh>
 126:	08 95       	ret
		case 1 : instrction_out(0xC0+x); break;
 128:	80 54       	subi	r24, 0x40	; 64
 12a:	d2 cf       	rjmp	.-92     	; 0xd0 <_Z14instrction_outh>
 12c:	08 95       	ret

0000012e <_Z9lcd_putsfhhPh>:
	}
}
void lcd_putsf(unsigned char x, unsigned char y, unsigned char *str)
{
 12e:	0f 93       	push	r16
 130:	1f 93       	push	r17
 132:	cf 93       	push	r28
 134:	df 93       	push	r29
 136:	04 2f       	mov	r16, r20
 138:	15 2f       	mov	r17, r21
	unsigned int i=0;
	lcd_gotoxy(x,y);
 13a:	ee df       	rcall	.-36     	; 0x118 <_Z10lcd_gotoxyhh>
 13c:	c0 2f       	mov	r28, r16
 13e:	d1 2f       	mov	r29, r17
	do
	{
		char_out(str[i]);
 140:	89 91       	ld	r24, Y+
 142:	d7 df       	rcall	.-82     	; 0xf2 <_Z8char_outh>
}
void lcd_putsf(unsigned char x, unsigned char y, unsigned char *str)
{
	unsigned int i=0;
	lcd_gotoxy(x,y);
	do
 144:	88 81       	ld	r24, Y
 146:	81 11       	cpse	r24, r1
 148:	fb cf       	rjmp	.-10     	; 0x140 <_Z9lcd_putsfhhPh+0x12>
	{
		char_out(str[i]);
	}
	while(str[++i]!='\0');
}
 14a:	df 91       	pop	r29
 14c:	cf 91       	pop	r28
 14e:	1f 91       	pop	r17
 150:	0f 91       	pop	r16
 152:	08 95       	ret

00000154 <_Z8lcd_initv>:
void lcd_init(void)
{
	init_PORTC();
 154:	b9 df       	rcall	.-142    	; 0xc8 <_Z10init_PORTCv>
 156:	80 ed       	ldi	r24, 0xD0	; 208
 158:	97 e0       	ldi	r25, 0x07	; 7
 15a:	20 e9       	ldi	r18, 0x90	; 144
 15c:	31 e0       	ldi	r19, 0x01	; 1
 15e:	f9 01       	movw	r30, r18
 160:	31 97       	sbiw	r30, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <_Z8lcd_initv+0xc>
 164:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 166:	d9 f7       	brne	.-10     	; 0x15e <_Z8lcd_initv+0xa>
 168:	80 e6       	ldi	r24, 0x60	; 96
 16a:	99 e0       	ldi	r25, 0x09	; 9
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <_Z8lcd_initv+0x18>
	_delay_ms(200);
	_delay_us(600);
	instrction_out(0x28);
 170:	88 e2       	ldi	r24, 0x28	; 40
 172:	ae df       	rcall	.-164    	; 0xd0 <_Z14instrction_outh>
 174:	80 ed       	ldi	r24, 0xD0	; 208
 176:	97 e0       	ldi	r25, 0x07	; 7
 178:	20 e9       	ldi	r18, 0x90	; 144
 17a:	31 e0       	ldi	r19, 0x01	; 1
 17c:	f9 01       	movw	r30, r18
 17e:	31 97       	sbiw	r30, 0x01	; 1
 180:	f1 f7       	brne	.-4      	; 0x17e <_Z8lcd_initv+0x2a>
 182:	01 97       	sbiw	r24, 0x01	; 1
	_delay_ms(200);
	instrction_out(0x28);
 184:	d9 f7       	brne	.-10     	; 0x17c <_Z8lcd_initv+0x28>
 186:	88 e2       	ldi	r24, 0x28	; 40
 188:	a3 df       	rcall	.-186    	; 0xd0 <_Z14instrction_outh>
 18a:	80 ed       	ldi	r24, 0xD0	; 208
 18c:	97 e0       	ldi	r25, 0x07	; 7
 18e:	20 e9       	ldi	r18, 0x90	; 144
 190:	31 e0       	ldi	r19, 0x01	; 1
 192:	f9 01       	movw	r30, r18
 194:	31 97       	sbiw	r30, 0x01	; 1
 196:	f1 f7       	brne	.-4      	; 0x194 <_Z8lcd_initv+0x40>
 198:	01 97       	sbiw	r24, 0x01	; 1
	_delay_ms(200);
	instrction_out(0x0C);
 19a:	d9 f7       	brne	.-10     	; 0x192 <_Z8lcd_initv+0x3e>
 19c:	8c e0       	ldi	r24, 0x0C	; 12
	instrction_out(0x06);
 19e:	98 df       	rcall	.-208    	; 0xd0 <_Z14instrction_outh>
 1a0:	86 e0       	ldi	r24, 0x06	; 6
	instrction_out(0x02);
 1a2:	96 df       	rcall	.-212    	; 0xd0 <_Z14instrction_outh>
 1a4:	82 e0       	ldi	r24, 0x02	; 2
	instrction_out(0x01);
 1a6:	94 df       	rcall	.-216    	; 0xd0 <_Z14instrction_outh>
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	92 df       	rcall	.-220    	; 0xd0 <_Z14instrction_outh>
	instrction_out(0x01);
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 cf       	rjmp	.-224    	; 0xd0 <_Z14instrction_outh>
 1b0:	08 95       	ret

000001b2 <_Z9lcd_clearv>:
 1b2:	81 e0       	ldi	r24, 0x01	; 1
}
void lcd_clear(void)
{
	instrction_out(0x01);
 1b4:	8d df       	rcall	.-230    	; 0xd0 <_Z14instrction_outh>
 1b6:	80 e4       	ldi	r24, 0x40	; 64
 1b8:	9c e9       	ldi	r25, 0x9C	; 156
 1ba:	01 97       	sbiw	r24, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <_Z9lcd_clearv+0x8>
 1be:	08 95       	ret

000001c0 <_Z4initv>:
#define KEY_MENU 123
#define KEY_ROB 119
#define KEY_DIV 183

void init()
{
 1c0:	ff 92       	push	r15
 1c2:	0f 93       	push	r16
 1c4:	1f 93       	push	r17
 1c6:	cf 93       	push	r28
 1c8:	df 93       	push	r29
	DDRA = 0xff;
 1ca:	8f ef       	ldi	r24, 0xFF	; 255
 1cc:	8a bb       	out	0x1a, r24	; 26
	DDRD = 0x0f;
 1ce:	8f e0       	ldi	r24, 0x0F	; 15
 1d0:	81 bb       	out	0x11, r24	; 17
	
	lcd_init();
 1d2:	c0 df       	rcall	.-128    	; 0x154 <_Z8lcd_initv>
	lcd_clear();
 1d4:	ee df       	rcall	.-36     	; 0x1b2 <_Z9lcd_clearv>
 1d6:	02 e0       	ldi	r16, 0x02	; 2
 1d8:	10 e0       	ldi	r17, 0x00	; 0
 1da:	c0 e9       	ldi	r28, 0x90	; 144
 1dc:	d1 e0       	ldi	r29, 0x01	; 1
 1de:	0f 2e       	mov	r0, r31
		lcd_putsf(0,0,(unsigned char *)" 	market   ");
		lcd_putsf(0,1,(unsigned char *)"    system    ");
		PORTA = 0b00000000;
		_delay_ms(100);
		lcd_clear();
		PORTA = 0b11100000;
 1e0:	f0 ee       	ldi	r31, 0xE0	; 224
 1e2:	ff 2e       	mov	r15, r31
 1e4:	f0 2d       	mov	r31, r0
 1e6:	40 e0       	ldi	r20, 0x00	; 0
	lcd_init();
	lcd_clear();
	
	for(int i = 0; i< 2; i++)
	{
		lcd_putsf(0,0,(unsigned char *)" 	market   ");
 1e8:	51 e0       	ldi	r21, 0x01	; 1
 1ea:	60 e0       	ldi	r22, 0x00	; 0
 1ec:	80 e0       	ldi	r24, 0x00	; 0
 1ee:	9f df       	rcall	.-194    	; 0x12e <_Z9lcd_putsfhhPh>
 1f0:	4c e0       	ldi	r20, 0x0C	; 12
		lcd_putsf(0,1,(unsigned char *)"    system    ");
 1f2:	51 e0       	ldi	r21, 0x01	; 1
 1f4:	61 e0       	ldi	r22, 0x01	; 1
 1f6:	80 e0       	ldi	r24, 0x00	; 0
 1f8:	9a df       	rcall	.-204    	; 0x12e <_Z9lcd_putsfhhPh>
 1fa:	1b ba       	out	0x1b, r1	; 27
		PORTA = 0b00000000;
 1fc:	88 ee       	ldi	r24, 0xE8	; 232
 1fe:	93 e0       	ldi	r25, 0x03	; 3
 200:	fe 01       	movw	r30, r28
 202:	31 97       	sbiw	r30, 0x01	; 1
 204:	f1 f7       	brne	.-4      	; 0x202 <_Z4initv+0x42>
 206:	01 97       	sbiw	r24, 0x01	; 1
 208:	d9 f7       	brne	.-10     	; 0x200 <_Z4initv+0x40>
		_delay_ms(100);
		lcd_clear();
 20a:	d3 df       	rcall	.-90     	; 0x1b2 <_Z9lcd_clearv>
 20c:	fb ba       	out	0x1b, r15	; 27
		PORTA = 0b11100000;
 20e:	88 ee       	ldi	r24, 0xE8	; 232
 210:	93 e0       	ldi	r25, 0x03	; 3
 212:	fe 01       	movw	r30, r28
 214:	31 97       	sbiw	r30, 0x01	; 1
 216:	f1 f7       	brne	.-4      	; 0x214 <_Z4initv+0x54>
 218:	01 97       	sbiw	r24, 0x01	; 1
 21a:	d9 f7       	brne	.-10     	; 0x212 <_Z4initv+0x52>
 21c:	01 50       	subi	r16, 0x01	; 1
 21e:	11 09       	sbc	r17, r1
 220:	11 f7       	brne	.-60     	; 0x1e6 <_Z4initv+0x26>
	DDRD = 0x0f;
	
	lcd_init();
	lcd_clear();
	
	for(int i = 0; i< 2; i++)
 222:	78 94       	sei
		_delay_ms(100);
		lcd_clear();
		PORTA = 0b11100000;
		_delay_ms(100);		
	}
	sei();
 224:	df 91       	pop	r29
}
 226:	cf 91       	pop	r28
 228:	1f 91       	pop	r17
 22a:	0f 91       	pop	r16
 22c:	ff 90       	pop	r15
 22e:	08 95       	ret

00000230 <_Z10displayclkjjj>:
 230:	cf 93       	push	r28

// display setting
void displayclk(unsigned int hour,unsigned int min,unsigned int sec)
{
 232:	df 93       	push	r29
 234:	cd b7       	in	r28, 0x3d	; 61
 236:	de b7       	in	r29, 0x3e	; 62
 238:	60 97       	sbiw	r28, 0x10	; 16
 23a:	0f b6       	in	r0, 0x3f	; 63
 23c:	f8 94       	cli
 23e:	de bf       	out	0x3e, r29	; 62
 240:	0f be       	out	0x3f, r0	; 63
 242:	cd bf       	out	0x3d, r28	; 61
	char str[16];
	sprintf(str,"  %2d:%2d:%2d", hour,min,sec);
 244:	5f 93       	push	r21
 246:	4f 93       	push	r20
 248:	7f 93       	push	r23
 24a:	6f 93       	push	r22
 24c:	9f 93       	push	r25
 24e:	8f 93       	push	r24
 250:	8b e1       	ldi	r24, 0x1B	; 27
 252:	91 e0       	ldi	r25, 0x01	; 1
 254:	9f 93       	push	r25
 256:	8f 93       	push	r24
 258:	ce 01       	movw	r24, r28
 25a:	01 96       	adiw	r24, 0x01	; 1
 25c:	9f 93       	push	r25
 25e:	8f 93       	push	r24
 260:	4f d3       	rcall	.+1694   	; 0x900 <sprintf>
	lcd_putsf(0,0,(unsigned char *)"  welcome!!  ");
 262:	49 e2       	ldi	r20, 0x29	; 41
 264:	51 e0       	ldi	r21, 0x01	; 1
 266:	60 e0       	ldi	r22, 0x00	; 0
 268:	80 e0       	ldi	r24, 0x00	; 0
 26a:	61 df       	rcall	.-318    	; 0x12e <_Z9lcd_putsfhhPh>
	//lcd_putsf(0,1,(unsigned char *)str);
}
 26c:	0f b6       	in	r0, 0x3f	; 63
 26e:	f8 94       	cli
 270:	de bf       	out	0x3e, r29	; 62
 272:	0f be       	out	0x3f, r0	; 63
 274:	cd bf       	out	0x3d, r28	; 61
 276:	60 96       	adiw	r28, 0x10	; 16
 278:	0f b6       	in	r0, 0x3f	; 63
 27a:	f8 94       	cli
 27c:	de bf       	out	0x3e, r29	; 62
 27e:	0f be       	out	0x3f, r0	; 63
 280:	cd bf       	out	0x3d, r28	; 61
 282:	df 91       	pop	r29
 284:	cf 91       	pop	r28
 286:	08 95       	ret

00000288 <_Z6getkeyv>:
unsigned char getkey()
{
	unsigned char key = 0;
	for(int i = 0; i< 4; i++)
	{
		PORTD = ~(0x00 | (1 << i));
 288:	8e ef       	ldi	r24, 0xFE	; 254
 28a:	82 bb       	out	0x12, r24	; 18
 28c:	80 e2       	ldi	r24, 0x20	; 32
 28e:	9e e4       	ldi	r25, 0x4E	; 78
 290:	01 97       	sbiw	r24, 0x01	; 1
 292:	f1 f7       	brne	.-4      	; 0x290 <_Z6getkeyv+0x8>
		_delay_ms(5);
		key = ~PIND & 0xf0;
 294:	80 b3       	in	r24, 0x10	; 16
		if(key) return PIND;
 296:	80 95       	com	r24
 298:	80 7f       	andi	r24, 0xF0	; 240
 29a:	b1 f4       	brne	.+44     	; 0x2c8 <_Z6getkeyv+0x40>
 29c:	21 e0       	ldi	r18, 0x01	; 1
 29e:	30 e0       	ldi	r19, 0x00	; 0
unsigned char getkey()
{
	unsigned char key = 0;
	for(int i = 0; i< 4; i++)
	{
		PORTD = ~(0x00 | (1 << i));
 2a0:	61 e0       	ldi	r22, 0x01	; 1
 2a2:	70 e0       	ldi	r23, 0x00	; 0
 2a4:	40 e2       	ldi	r20, 0x20	; 32
 2a6:	5e e4       	ldi	r21, 0x4E	; 78
 2a8:	cb 01       	movw	r24, r22
 2aa:	02 2e       	mov	r0, r18
 2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <_Z6getkeyv+0x2a>
 2ae:	88 0f       	add	r24, r24
 2b0:	99 1f       	adc	r25, r25
 2b2:	0a 94       	dec	r0
 2b4:	e2 f7       	brpl	.-8      	; 0x2ae <_Z6getkeyv+0x26>
 2b6:	80 95       	com	r24
 2b8:	82 bb       	out	0x12, r24	; 18
 2ba:	ca 01       	movw	r24, r20
 2bc:	01 97       	sbiw	r24, 0x01	; 1
 2be:	f1 f7       	brne	.-4      	; 0x2bc <_Z6getkeyv+0x34>
		_delay_ms(5);
		key = ~PIND & 0xf0;
 2c0:	80 b3       	in	r24, 0x10	; 16
		if(key) return PIND;
 2c2:	80 95       	com	r24
 2c4:	80 7f       	andi	r24, 0xF0	; 240
 2c6:	11 f0       	breq	.+4      	; 0x2cc <_Z6getkeyv+0x44>
 2c8:	80 b3       	in	r24, 0x10	; 16
 2ca:	08 95       	ret
}

unsigned char getkey()
{
	unsigned char key = 0;
	for(int i = 0; i< 4; i++)
 2cc:	2f 5f       	subi	r18, 0xFF	; 255
 2ce:	3f 4f       	sbci	r19, 0xFF	; 255
 2d0:	24 30       	cpi	r18, 0x04	; 4
 2d2:	31 05       	cpc	r19, r1
 2d4:	49 f7       	brne	.-46     	; 0x2a8 <_Z6getkeyv+0x20>
		PORTD = ~(0x00 | (1 << i));
		_delay_ms(5);
		key = ~PIND & 0xf0;
		if(key) return PIND;
	}	
	return 0;
 2d6:	80 e0       	ldi	r24, 0x00	; 0
}
 2d8:	08 95       	ret

000002da <__vector_16>:
int mode = 0;
int flag = 0;
unsigned int current_price = 0;
unsigned int total_price = 0;
ISR(TIMER0_OVF_vect)
{
 2da:	1f 92       	push	r1
 2dc:	0f 92       	push	r0
 2de:	0f b6       	in	r0, 0x3f	; 63
 2e0:	0f 92       	push	r0
 2e2:	11 24       	eor	r1, r1
 2e4:	0b b6       	in	r0, 0x3b	; 59
 2e6:	0f 92       	push	r0
 2e8:	ff 92       	push	r15
 2ea:	0f 93       	push	r16
 2ec:	1f 93       	push	r17
 2ee:	2f 93       	push	r18
 2f0:	3f 93       	push	r19
 2f2:	4f 93       	push	r20
 2f4:	5f 93       	push	r21
 2f6:	6f 93       	push	r22
 2f8:	7f 93       	push	r23
 2fa:	8f 93       	push	r24
 2fc:	9f 93       	push	r25
 2fe:	af 93       	push	r26
 300:	bf 93       	push	r27
 302:	cf 93       	push	r28
 304:	df 93       	push	r29
 306:	ef 93       	push	r30
 308:	ff 93       	push	r31
	tcnt++;
 30a:	20 91 9a 01 	lds	r18, 0x019A	; 0x80019a <tcnt>
 30e:	30 91 9b 01 	lds	r19, 0x019B	; 0x80019b <tcnt+0x1>
 312:	40 91 9c 01 	lds	r20, 0x019C	; 0x80019c <tcnt+0x2>
 316:	50 91 9d 01 	lds	r21, 0x019D	; 0x80019d <tcnt+0x3>
 31a:	60 91 9e 01 	lds	r22, 0x019E	; 0x80019e <tcnt+0x4>
 31e:	70 91 9f 01 	lds	r23, 0x019F	; 0x80019f <tcnt+0x5>
 322:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <tcnt+0x6>
 326:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <tcnt+0x7>
 32a:	a1 e0       	ldi	r26, 0x01	; 1
 32c:	d1 d2       	rcall	.+1442   	; 0x8d0 <__adddi3_s8>
 32e:	20 93 9a 01 	sts	0x019A, r18	; 0x80019a <tcnt>
 332:	30 93 9b 01 	sts	0x019B, r19	; 0x80019b <tcnt+0x1>
 336:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <tcnt+0x2>
 33a:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <tcnt+0x3>
 33e:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <tcnt+0x4>
 342:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <tcnt+0x5>
 346:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <tcnt+0x6>
 34a:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <tcnt+0x7>
	if(tcnt >= 61)
 34e:	ac e3       	ldi	r26, 0x3C	; 60
 350:	cb d2       	rcall	.+1430   	; 0x8e8 <__cmpdi2_s8>
 352:	09 f0       	breq	.+2      	; 0x356 <__vector_16+0x7c>
 354:	0c f4       	brge	.+2      	; 0x358 <__vector_16+0x7e>
 356:	f3 c0       	rjmp	.+486    	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
	{
		sec++;
 358:	20 91 82 01 	lds	r18, 0x0182	; 0x800182 <sec>
 35c:	30 91 83 01 	lds	r19, 0x0183	; 0x800183 <sec+0x1>
 360:	40 91 84 01 	lds	r20, 0x0184	; 0x800184 <sec+0x2>
 364:	50 91 85 01 	lds	r21, 0x0185	; 0x800185 <sec+0x3>
 368:	60 91 86 01 	lds	r22, 0x0186	; 0x800186 <sec+0x4>
 36c:	70 91 87 01 	lds	r23, 0x0187	; 0x800187 <sec+0x5>
 370:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <sec+0x6>
 374:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <sec+0x7>
 378:	a1 e0       	ldi	r26, 0x01	; 1
		if(sec >60) {sec = 0; min++;}
 37a:	aa d2       	rcall	.+1364   	; 0x8d0 <__adddi3_s8>
 37c:	ac e3       	ldi	r26, 0x3C	; 60
 37e:	b4 d2       	rcall	.+1384   	; 0x8e8 <__cmpdi2_s8>
 380:	09 f0       	breq	.+2      	; 0x384 <__vector_16+0xaa>
 382:	8c f4       	brge	.+34     	; 0x3a6 <__vector_16+0xcc>
ISR(TIMER0_OVF_vect)
{
	tcnt++;
	if(tcnt >= 61)
	{
		sec++;
 384:	20 93 82 01 	sts	0x0182, r18	; 0x800182 <sec>
 388:	30 93 83 01 	sts	0x0183, r19	; 0x800183 <sec+0x1>
 38c:	40 93 84 01 	sts	0x0184, r20	; 0x800184 <sec+0x2>
 390:	50 93 85 01 	sts	0x0185, r21	; 0x800185 <sec+0x3>
 394:	60 93 86 01 	sts	0x0186, r22	; 0x800186 <sec+0x4>
 398:	70 93 87 01 	sts	0x0187, r23	; 0x800187 <sec+0x5>
 39c:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <sec+0x6>
 3a0:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <sec+0x7>
 3a4:	32 c0       	rjmp	.+100    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
		if(sec >60) {sec = 0; min++;}
 3a6:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <sec>
 3aa:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <sec+0x1>
 3ae:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <sec+0x2>
 3b2:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <sec+0x3>
 3b6:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <sec+0x4>
 3ba:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <sec+0x5>
 3be:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <sec+0x6>
 3c2:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <sec+0x7>
 3c6:	20 91 8a 01 	lds	r18, 0x018A	; 0x80018a <min>
 3ca:	30 91 8b 01 	lds	r19, 0x018B	; 0x80018b <min+0x1>
 3ce:	40 91 8c 01 	lds	r20, 0x018C	; 0x80018c <min+0x2>
 3d2:	50 91 8d 01 	lds	r21, 0x018D	; 0x80018d <min+0x3>
 3d6:	60 91 8e 01 	lds	r22, 0x018E	; 0x80018e <min+0x4>
 3da:	70 91 8f 01 	lds	r23, 0x018F	; 0x80018f <min+0x5>
 3de:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <min+0x6>
 3e2:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <min+0x7>
 3e6:	a1 e0       	ldi	r26, 0x01	; 1
 3e8:	73 d2       	rcall	.+1254   	; 0x8d0 <__adddi3_s8>
 3ea:	20 93 8a 01 	sts	0x018A, r18	; 0x80018a <min>
 3ee:	30 93 8b 01 	sts	0x018B, r19	; 0x80018b <min+0x1>
 3f2:	40 93 8c 01 	sts	0x018C, r20	; 0x80018c <min+0x2>
 3f6:	50 93 8d 01 	sts	0x018D, r21	; 0x80018d <min+0x3>
 3fa:	60 93 8e 01 	sts	0x018E, r22	; 0x80018e <min+0x4>
 3fe:	70 93 8f 01 	sts	0x018F, r23	; 0x80018f <min+0x5>
 402:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <min+0x6>
 406:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <min+0x7>
		if(min >60) {min = 0; hour++;}
 40a:	20 91 8a 01 	lds	r18, 0x018A	; 0x80018a <min>
 40e:	30 91 8b 01 	lds	r19, 0x018B	; 0x80018b <min+0x1>
 412:	40 91 8c 01 	lds	r20, 0x018C	; 0x80018c <min+0x2>
 416:	50 91 8d 01 	lds	r21, 0x018D	; 0x80018d <min+0x3>
 41a:	60 91 8e 01 	lds	r22, 0x018E	; 0x80018e <min+0x4>
 41e:	70 91 8f 01 	lds	r23, 0x018F	; 0x80018f <min+0x5>
 422:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <min+0x6>
 426:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <min+0x7>
 42a:	ac e3       	ldi	r26, 0x3C	; 60
 42c:	5d d2       	rcall	.+1210   	; 0x8e8 <__cmpdi2_s8>
 42e:	99 f1       	breq	.+102    	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 430:	94 f1       	brlt	.+100    	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 432:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <min>
 436:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <min+0x1>
 43a:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <min+0x2>
 43e:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <min+0x3>
 442:	10 92 8e 01 	sts	0x018E, r1	; 0x80018e <min+0x4>
 446:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <min+0x5>
 44a:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <min+0x6>
 44e:	10 92 91 01 	sts	0x0191, r1	; 0x800191 <min+0x7>
 452:	20 91 92 01 	lds	r18, 0x0192	; 0x800192 <hour>
 456:	30 91 93 01 	lds	r19, 0x0193	; 0x800193 <hour+0x1>
 45a:	40 91 94 01 	lds	r20, 0x0194	; 0x800194 <hour+0x2>
 45e:	50 91 95 01 	lds	r21, 0x0195	; 0x800195 <hour+0x3>
 462:	60 91 96 01 	lds	r22, 0x0196	; 0x800196 <hour+0x4>
 466:	70 91 97 01 	lds	r23, 0x0197	; 0x800197 <hour+0x5>
 46a:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <hour+0x6>
 46e:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <hour+0x7>
 472:	a1 e0       	ldi	r26, 0x01	; 1
 474:	2d d2       	rcall	.+1114   	; 0x8d0 <__adddi3_s8>
 476:	20 93 92 01 	sts	0x0192, r18	; 0x800192 <hour>
 47a:	30 93 93 01 	sts	0x0193, r19	; 0x800193 <hour+0x1>
 47e:	40 93 94 01 	sts	0x0194, r20	; 0x800194 <hour+0x2>
 482:	50 93 95 01 	sts	0x0195, r21	; 0x800195 <hour+0x3>
 486:	60 93 96 01 	sts	0x0196, r22	; 0x800196 <hour+0x4>
 48a:	70 93 97 01 	sts	0x0197, r23	; 0x800197 <hour+0x5>
 48e:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <hour+0x6>
 492:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <hour+0x7>
		if(hour > 23){hour = min = sec = 0;}
 496:	20 91 92 01 	lds	r18, 0x0192	; 0x800192 <hour>
 49a:	30 91 93 01 	lds	r19, 0x0193	; 0x800193 <hour+0x1>
 49e:	40 91 94 01 	lds	r20, 0x0194	; 0x800194 <hour+0x2>
 4a2:	50 91 95 01 	lds	r21, 0x0195	; 0x800195 <hour+0x3>
 4a6:	60 91 96 01 	lds	r22, 0x0196	; 0x800196 <hour+0x4>
 4aa:	70 91 97 01 	lds	r23, 0x0197	; 0x800197 <hour+0x5>
 4ae:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <hour+0x6>
 4b2:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <hour+0x7>
 4b6:	a7 e1       	ldi	r26, 0x17	; 23
 4b8:	17 d2       	rcall	.+1070   	; 0x8e8 <__cmpdi2_s8>
 4ba:	89 f1       	breq	.+98     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 4bc:	84 f1       	brlt	.+96     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 4be:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <sec>
 4c2:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <sec+0x1>
 4c6:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <sec+0x2>
 4ca:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <sec+0x3>
 4ce:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <sec+0x4>
 4d2:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <sec+0x5>
 4d6:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <sec+0x6>
 4da:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <sec+0x7>
 4de:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <min>
 4e2:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <min+0x1>
 4e6:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <min+0x2>
 4ea:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <min+0x3>
 4ee:	10 92 8e 01 	sts	0x018E, r1	; 0x80018e <min+0x4>
 4f2:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <min+0x5>
 4f6:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <min+0x6>
 4fa:	10 92 91 01 	sts	0x0191, r1	; 0x800191 <min+0x7>
 4fe:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <hour>
 502:	10 92 93 01 	sts	0x0193, r1	; 0x800193 <hour+0x1>
 506:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <hour+0x2>
 50a:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <hour+0x3>
 50e:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <hour+0x4>
 512:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <hour+0x5>
 516:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <hour+0x6>
 51a:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <hour+0x7>
		tcnt = 0;
 51e:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <tcnt>
 522:	10 92 9b 01 	sts	0x019B, r1	; 0x80019b <tcnt+0x1>
 526:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <tcnt+0x2>
 52a:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <tcnt+0x3>
 52e:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <tcnt+0x4>
 532:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <tcnt+0x5>
 536:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <tcnt+0x6>
 53a:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <tcnt+0x7>
	}	
}
 53e:	ff 91       	pop	r31
 540:	ef 91       	pop	r30
 542:	df 91       	pop	r29
 544:	cf 91       	pop	r28
 546:	bf 91       	pop	r27
 548:	af 91       	pop	r26
 54a:	9f 91       	pop	r25
 54c:	8f 91       	pop	r24
 54e:	7f 91       	pop	r23
 550:	6f 91       	pop	r22
 552:	5f 91       	pop	r21
 554:	4f 91       	pop	r20
 556:	3f 91       	pop	r19
 558:	2f 91       	pop	r18
 55a:	1f 91       	pop	r17
 55c:	0f 91       	pop	r16
 55e:	ff 90       	pop	r15
 560:	0f 90       	pop	r0
 562:	0b be       	out	0x3b, r0	; 59
 564:	0f 90       	pop	r0
 566:	0f be       	out	0x3f, r0	; 63
 568:	0f 90       	pop	r0
 56a:	1f 90       	pop	r1
 56c:	18 95       	reti

0000056e <main>:

int main(void)
{
 56e:	cf 93       	push	r28
 570:	df 93       	push	r29
 572:	cd b7       	in	r28, 0x3d	; 61
 574:	de b7       	in	r29, 0x3e	; 62
 576:	60 97       	sbiw	r28, 0x10	; 16
 578:	0f b6       	in	r0, 0x3f	; 63
 57a:	f8 94       	cli
 57c:	de bf       	out	0x3e, r29	; 62
 57e:	0f be       	out	0x3f, r0	; 63
 580:	cd bf       	out	0x3d, r28	; 61
	init();
 582:	1e de       	rcall	.-964    	; 0x1c0 <_Z4initv>

    /* Replace with your application code */
    while (1) 
    {
		int input = getkey();		
		displayclk(hour,min,sec);
 584:	0f 2e       	mov	r0, r31
 586:	f2 e8       	ldi	r31, 0x82	; 130
 588:	af 2e       	mov	r10, r31
 58a:	f1 e0       	ldi	r31, 0x01	; 1
 58c:	bf 2e       	mov	r11, r31
 58e:	f0 2d       	mov	r31, r0
 590:	0f 2e       	mov	r0, r31
 592:	fa e8       	ldi	r31, 0x8A	; 138
 594:	cf 2e       	mov	r12, r31
 596:	f1 e0       	ldi	r31, 0x01	; 1
 598:	df 2e       	mov	r13, r31
 59a:	f0 2d       	mov	r31, r0
 59c:	0f 2e       	mov	r0, r31
 59e:	f2 e9       	ldi	r31, 0x92	; 146
 5a0:	ef 2e       	mov	r14, r31
 5a2:	f1 e0       	ldi	r31, 0x01	; 1
 5a4:	ff 2e       	mov	r15, r31
 5a6:	f0 2d       	mov	r31, r0
					}
				flag = 1;													
			}
			if(input == 0) flag = 0;
			char str[16];
			sprintf(str,"%lld", current_price);
 5a8:	0f 2e       	mov	r0, r31
 5aa:	f7 e6       	ldi	r31, 0x67	; 103
 5ac:	4f 2e       	mov	r4, r31
 5ae:	f1 e0       	ldi	r31, 0x01	; 1
 5b0:	5f 2e       	mov	r5, r31
 5b2:	f0 2d       	mov	r31, r0
 5b4:	ce 01       	movw	r24, r28
 5b6:	01 96       	adiw	r24, 0x01	; 1
 5b8:	3c 01       	movw	r6, r24
				else if(input == KEY_0) current_price = (current_price * 10) + 0;		
				else if(input == KEY_Sum) {
					total_price = total_price +current_price;
					current_price = 0;
					}
				flag = 1;													
 5ba:	88 24       	eor	r8, r8
 5bc:	83 94       	inc	r8
 5be:	91 2c       	mov	r9, r1
			lcd_clear();
			lcd_putsf(0,0,(unsigned char *)"1. calculation");
			lcd_putsf(0,1,(unsigned char *)"2. total sales");
			if(input == KEY_1)
			{
				mode = CALC_MODE;
 5c0:	68 94       	set
 5c2:	22 24       	eor	r2, r2
 5c4:	21 f8       	bld	r2, 1
	init();

    /* Replace with your application code */
    while (1) 
    {
		int input = getkey();		
 5c6:	31 2c       	mov	r3, r1
 5c8:	5f de       	rcall	.-834    	; 0x288 <_Z6getkeyv>
 5ca:	08 2f       	mov	r16, r24
 5cc:	10 e0       	ldi	r17, 0x00	; 0
		displayclk(hour,min,sec);
 5ce:	f5 01       	movw	r30, r10
 5d0:	40 81       	ld	r20, Z
 5d2:	51 81       	ldd	r21, Z+1	; 0x01
 5d4:	f6 01       	movw	r30, r12
 5d6:	60 81       	ld	r22, Z
 5d8:	71 81       	ldd	r23, Z+1	; 0x01
 5da:	f7 01       	movw	r30, r14
 5dc:	80 81       	ld	r24, Z
 5de:	91 81       	ldd	r25, Z+1	; 0x01
 5e0:	27 de       	rcall	.-946    	; 0x230 <_Z10displayclkjjj>
		if(mode == NORMAL_MODE)
 5e2:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <mode>
 5e6:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <mode+0x1>
 5ea:	00 97       	sbiw	r24, 0x00	; 0
 5ec:	91 f4       	brne	.+36     	; 0x612 <main+0xa4>
		{
			displayclk(hour,min,sec);
 5ee:	f5 01       	movw	r30, r10
 5f0:	40 81       	ld	r20, Z
 5f2:	51 81       	ldd	r21, Z+1	; 0x01
 5f4:	f6 01       	movw	r30, r12
 5f6:	60 81       	ld	r22, Z
 5f8:	71 81       	ldd	r23, Z+1	; 0x01
 5fa:	f7 01       	movw	r30, r14
 5fc:	80 81       	ld	r24, Z
 5fe:	91 81       	ldd	r25, Z+1	; 0x01
 600:	17 de       	rcall	.-978    	; 0x230 <_Z10displayclkjjj>
			if(input == KEY_MENU)
 602:	0b 37       	cpi	r16, 0x7B	; 123
 604:	11 05       	cpc	r17, r1
 606:	01 f7       	brne	.-64     	; 0x5c8 <main+0x5a>
			mode = MENU_MODE;
 608:	90 92 81 01 	sts	0x0181, r9	; 0x800181 <mode+0x1>
 60c:	80 92 80 01 	sts	0x0180, r8	; 0x800180 <mode>
			
			
		}
		else if(mode == MENU_MODE)
 610:	db cf       	rjmp	.-74     	; 0x5c8 <main+0x5a>
 612:	81 30       	cpi	r24, 0x01	; 1
 614:	91 05       	cpc	r25, r1
		{
			lcd_clear();
 616:	f1 f4       	brne	.+60     	; 0x654 <main+0xe6>
			lcd_putsf(0,0,(unsigned char *)"1. calculation");
 618:	cc dd       	rcall	.-1128   	; 0x1b2 <_Z9lcd_clearv>
 61a:	47 e3       	ldi	r20, 0x37	; 55
 61c:	51 e0       	ldi	r21, 0x01	; 1
 61e:	60 e0       	ldi	r22, 0x00	; 0
 620:	80 e0       	ldi	r24, 0x00	; 0
			lcd_putsf(0,1,(unsigned char *)"2. total sales");
 622:	85 dd       	rcall	.-1270   	; 0x12e <_Z9lcd_putsfhhPh>
 624:	46 e4       	ldi	r20, 0x46	; 70
 626:	51 e0       	ldi	r21, 0x01	; 1
 628:	61 e0       	ldi	r22, 0x01	; 1
 62a:	80 e0       	ldi	r24, 0x00	; 0
 62c:	80 dd       	rcall	.-1280   	; 0x12e <_Z9lcd_putsfhhPh>
			if(input == KEY_1)
 62e:	0e 3e       	cpi	r16, 0xEE	; 238
 630:	11 05       	cpc	r17, r1
 632:	29 f4       	brne	.+10     	; 0x63e <main+0xd0>
			{
				mode = CALC_MODE;
 634:	30 92 81 01 	sts	0x0181, r3	; 0x800181 <mode+0x1>
 638:	20 92 80 01 	sts	0x0180, r2	; 0x800180 <mode>
 63c:	c5 cf       	rjmp	.-118    	; 0x5c8 <main+0x5a>
				
			}
			else if(input == KEY_2)
 63e:	0e 3d       	cpi	r16, 0xDE	; 222
 640:	11 05       	cpc	r17, r1
 642:	09 f0       	breq	.+2      	; 0x646 <main+0xd8>
 644:	c1 cf       	rjmp	.-126    	; 0x5c8 <main+0x5a>
			{
				mode = TOTAL_MODE;
 646:	83 e0       	ldi	r24, 0x03	; 3
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	90 93 81 01 	sts	0x0181, r25	; 0x800181 <mode+0x1>
 64e:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <mode>
			}
		}
		else if(mode == CALC_MODE)
 652:	ba cf       	rjmp	.-140    	; 0x5c8 <main+0x5a>
 654:	82 30       	cpi	r24, 0x02	; 2
 656:	91 05       	cpc	r25, r1
		{
			lcd_clear();
 658:	09 f0       	breq	.+2      	; 0x65c <main+0xee>
 65a:	31 c1       	rjmp	.+610    	; 0x8be <main+0x350>
			lcd_putsf(0,0,(unsigned char *)" calculation mode");
 65c:	aa dd       	rcall	.-1196   	; 0x1b2 <_Z9lcd_clearv>
 65e:	45 e5       	ldi	r20, 0x55	; 85
 660:	51 e0       	ldi	r21, 0x01	; 1
 662:	60 e0       	ldi	r22, 0x00	; 0
 664:	80 e0       	ldi	r24, 0x00	; 0
 666:	63 dd       	rcall	.-1338   	; 0x12e <_Z9lcd_putsfhhPh>
			if (flag == 0)
 668:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <flag>
 66c:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <flag+0x1>
 670:	89 2b       	or	r24, r25
 672:	09 f0       	breq	.+2      	; 0x676 <main+0x108>
 674:	08 c1       	rjmp	.+528    	; 0x886 <main+0x318>
			{
				if(input == KEY_1) current_price = (current_price * 10) + 1;
 676:	0e 3e       	cpi	r16, 0xEE	; 238
 678:	11 05       	cpc	r17, r1
 67a:	a9 f4       	brne	.+42     	; 0x6a6 <main+0x138>
 67c:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current_price>
 680:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current_price+0x1>
 684:	9c 01       	movw	r18, r24
 686:	22 0f       	add	r18, r18
 688:	33 1f       	adc	r19, r19
 68a:	88 0f       	add	r24, r24
 68c:	99 1f       	adc	r25, r25
 68e:	88 0f       	add	r24, r24
 690:	99 1f       	adc	r25, r25
 692:	88 0f       	add	r24, r24
 694:	99 1f       	adc	r25, r25
 696:	82 0f       	add	r24, r18
 698:	93 1f       	adc	r25, r19
 69a:	01 96       	adiw	r24, 0x01	; 1
 69c:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <current_price+0x1>
 6a0:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <current_price>
 6a4:	ec c0       	rjmp	.+472    	; 0x87e <main+0x310>
				else if(input == KEY_2) current_price = (current_price * 10) + 2;		
 6a6:	0e 3d       	cpi	r16, 0xDE	; 222
 6a8:	11 05       	cpc	r17, r1
 6aa:	a9 f4       	brne	.+42     	; 0x6d6 <main+0x168>
 6ac:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current_price>
 6b0:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current_price+0x1>
 6b4:	9c 01       	movw	r18, r24
 6b6:	22 0f       	add	r18, r18
 6b8:	33 1f       	adc	r19, r19
 6ba:	88 0f       	add	r24, r24
 6bc:	99 1f       	adc	r25, r25
 6be:	88 0f       	add	r24, r24
 6c0:	99 1f       	adc	r25, r25
 6c2:	88 0f       	add	r24, r24
 6c4:	99 1f       	adc	r25, r25
 6c6:	82 0f       	add	r24, r18
 6c8:	93 1f       	adc	r25, r19
 6ca:	02 96       	adiw	r24, 0x02	; 2
 6cc:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <current_price+0x1>
 6d0:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <current_price>
 6d4:	d4 c0       	rjmp	.+424    	; 0x87e <main+0x310>
				else if(input == KEY_3) current_price = (current_price * 10) + 3;
 6d6:	0e 3b       	cpi	r16, 0xBE	; 190
 6d8:	11 05       	cpc	r17, r1
 6da:	a9 f4       	brne	.+42     	; 0x706 <main+0x198>
 6dc:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current_price>
 6e0:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current_price+0x1>
 6e4:	9c 01       	movw	r18, r24
 6e6:	22 0f       	add	r18, r18
 6e8:	33 1f       	adc	r19, r19
 6ea:	88 0f       	add	r24, r24
 6ec:	99 1f       	adc	r25, r25
 6ee:	88 0f       	add	r24, r24
 6f0:	99 1f       	adc	r25, r25
 6f2:	88 0f       	add	r24, r24
 6f4:	99 1f       	adc	r25, r25
 6f6:	82 0f       	add	r24, r18
 6f8:	93 1f       	adc	r25, r19
 6fa:	03 96       	adiw	r24, 0x03	; 3
 6fc:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <current_price+0x1>
 700:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <current_price>
 704:	bc c0       	rjmp	.+376    	; 0x87e <main+0x310>
				else if(input == KEY_4) current_price = (current_price * 10) + 4;	
 706:	0d 3e       	cpi	r16, 0xED	; 237
 708:	11 05       	cpc	r17, r1
 70a:	a9 f4       	brne	.+42     	; 0x736 <main+0x1c8>
 70c:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current_price>
 710:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current_price+0x1>
 714:	9c 01       	movw	r18, r24
 716:	22 0f       	add	r18, r18
 718:	33 1f       	adc	r19, r19
 71a:	88 0f       	add	r24, r24
 71c:	99 1f       	adc	r25, r25
 71e:	88 0f       	add	r24, r24
 720:	99 1f       	adc	r25, r25
 722:	88 0f       	add	r24, r24
 724:	99 1f       	adc	r25, r25
 726:	82 0f       	add	r24, r18
 728:	93 1f       	adc	r25, r19
 72a:	04 96       	adiw	r24, 0x04	; 4
 72c:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <current_price+0x1>
 730:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <current_price>
 734:	a4 c0       	rjmp	.+328    	; 0x87e <main+0x310>
				else if(input == KEY_5) current_price = (current_price * 10) + 5;				
 736:	0d 3d       	cpi	r16, 0xDD	; 221
 738:	11 05       	cpc	r17, r1
 73a:	a9 f4       	brne	.+42     	; 0x766 <main+0x1f8>
 73c:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current_price>
 740:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current_price+0x1>
 744:	9c 01       	movw	r18, r24
 746:	22 0f       	add	r18, r18
 748:	33 1f       	adc	r19, r19
 74a:	88 0f       	add	r24, r24
 74c:	99 1f       	adc	r25, r25
 74e:	88 0f       	add	r24, r24
 750:	99 1f       	adc	r25, r25
 752:	88 0f       	add	r24, r24
 754:	99 1f       	adc	r25, r25
 756:	82 0f       	add	r24, r18
 758:	93 1f       	adc	r25, r19
 75a:	05 96       	adiw	r24, 0x05	; 5
 75c:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <current_price+0x1>
 760:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <current_price>
 764:	8c c0       	rjmp	.+280    	; 0x87e <main+0x310>
				else if(input == KEY_6) current_price = (current_price * 10) + 6;				
 766:	0d 3b       	cpi	r16, 0xBD	; 189
 768:	11 05       	cpc	r17, r1
 76a:	a9 f4       	brne	.+42     	; 0x796 <main+0x228>
 76c:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current_price>
 770:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current_price+0x1>
 774:	9c 01       	movw	r18, r24
 776:	22 0f       	add	r18, r18
 778:	33 1f       	adc	r19, r19
 77a:	88 0f       	add	r24, r24
 77c:	99 1f       	adc	r25, r25
 77e:	88 0f       	add	r24, r24
 780:	99 1f       	adc	r25, r25
 782:	88 0f       	add	r24, r24
 784:	99 1f       	adc	r25, r25
 786:	82 0f       	add	r24, r18
 788:	93 1f       	adc	r25, r19
 78a:	06 96       	adiw	r24, 0x06	; 6
 78c:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <current_price+0x1>
 790:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <current_price>
 794:	74 c0       	rjmp	.+232    	; 0x87e <main+0x310>
				else if(input == KEY_7) current_price = (current_price * 10) + 7;				
 796:	0b 3e       	cpi	r16, 0xEB	; 235
 798:	11 05       	cpc	r17, r1
 79a:	a9 f4       	brne	.+42     	; 0x7c6 <main+0x258>
 79c:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current_price>
 7a0:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current_price+0x1>
 7a4:	9c 01       	movw	r18, r24
 7a6:	22 0f       	add	r18, r18
 7a8:	33 1f       	adc	r19, r19
 7aa:	88 0f       	add	r24, r24
 7ac:	99 1f       	adc	r25, r25
 7ae:	88 0f       	add	r24, r24
 7b0:	99 1f       	adc	r25, r25
 7b2:	88 0f       	add	r24, r24
 7b4:	99 1f       	adc	r25, r25
 7b6:	82 0f       	add	r24, r18
 7b8:	93 1f       	adc	r25, r19
 7ba:	07 96       	adiw	r24, 0x07	; 7
 7bc:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <current_price+0x1>
 7c0:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <current_price>
 7c4:	5c c0       	rjmp	.+184    	; 0x87e <main+0x310>
				else if(input == KEY_8) current_price = (current_price * 10) + 8;				
 7c6:	0b 3d       	cpi	r16, 0xDB	; 219
 7c8:	11 05       	cpc	r17, r1
 7ca:	a9 f4       	brne	.+42     	; 0x7f6 <main+0x288>
 7cc:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current_price>
 7d0:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current_price+0x1>
 7d4:	9c 01       	movw	r18, r24
 7d6:	22 0f       	add	r18, r18
 7d8:	33 1f       	adc	r19, r19
 7da:	88 0f       	add	r24, r24
 7dc:	99 1f       	adc	r25, r25
 7de:	88 0f       	add	r24, r24
 7e0:	99 1f       	adc	r25, r25
 7e2:	88 0f       	add	r24, r24
 7e4:	99 1f       	adc	r25, r25
 7e6:	82 0f       	add	r24, r18
 7e8:	93 1f       	adc	r25, r19
 7ea:	08 96       	adiw	r24, 0x08	; 8
 7ec:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <current_price+0x1>
 7f0:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <current_price>
 7f4:	44 c0       	rjmp	.+136    	; 0x87e <main+0x310>
				else if(input == KEY_9) current_price = (current_price * 10) + 9;
 7f6:	0b 3b       	cpi	r16, 0xBB	; 187
 7f8:	11 05       	cpc	r17, r1
 7fa:	a9 f4       	brne	.+42     	; 0x826 <main+0x2b8>
 7fc:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current_price>
 800:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current_price+0x1>
 804:	9c 01       	movw	r18, r24
 806:	22 0f       	add	r18, r18
 808:	33 1f       	adc	r19, r19
 80a:	88 0f       	add	r24, r24
 80c:	99 1f       	adc	r25, r25
 80e:	88 0f       	add	r24, r24
 810:	99 1f       	adc	r25, r25
 812:	88 0f       	add	r24, r24
 814:	99 1f       	adc	r25, r25
 816:	82 0f       	add	r24, r18
 818:	93 1f       	adc	r25, r19
 81a:	09 96       	adiw	r24, 0x09	; 9
 81c:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <current_price+0x1>
 820:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <current_price>
 824:	2c c0       	rjmp	.+88     	; 0x87e <main+0x310>
				else if(input == KEY_0) current_price = (current_price * 10) + 0;		
 826:	07 3e       	cpi	r16, 0xE7	; 231
 828:	11 05       	cpc	r17, r1
 82a:	a1 f4       	brne	.+40     	; 0x854 <main+0x2e6>
 82c:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current_price>
 830:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current_price+0x1>
 834:	9c 01       	movw	r18, r24
 836:	22 0f       	add	r18, r18
 838:	33 1f       	adc	r19, r19
 83a:	88 0f       	add	r24, r24
 83c:	99 1f       	adc	r25, r25
 83e:	88 0f       	add	r24, r24
 840:	99 1f       	adc	r25, r25
 842:	88 0f       	add	r24, r24
 844:	99 1f       	adc	r25, r25
 846:	82 0f       	add	r24, r18
 848:	93 1f       	adc	r25, r19
 84a:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <current_price+0x1>
 84e:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <current_price>
 852:	15 c0       	rjmp	.+42     	; 0x87e <main+0x310>
				else if(input == KEY_Sum) {
 854:	0e 37       	cpi	r16, 0x7E	; 126
 856:	11 05       	cpc	r17, r1
 858:	91 f4       	brne	.+36     	; 0x87e <main+0x310>
					total_price = total_price +current_price;
 85a:	20 91 7a 01 	lds	r18, 0x017A	; 0x80017a <__data_end>
 85e:	30 91 7b 01 	lds	r19, 0x017B	; 0x80017b <__data_end+0x1>
 862:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current_price>
 866:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current_price+0x1>
 86a:	82 0f       	add	r24, r18
 86c:	93 1f       	adc	r25, r19
 86e:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <__data_end+0x1>
 872:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <__data_end>
					current_price = 0;
 876:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <current_price+0x1>
 87a:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <current_price>
					}
				flag = 1;													
 87e:	90 92 7f 01 	sts	0x017F, r9	; 0x80017f <flag+0x1>
 882:	80 92 7e 01 	sts	0x017E, r8	; 0x80017e <flag>
			}
			if(input == 0) flag = 0;
 886:	01 2b       	or	r16, r17
 888:	21 f4       	brne	.+8      	; 0x892 <main+0x324>
 88a:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <flag+0x1>
 88e:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <flag>
			char str[16];
			sprintf(str,"%lld", current_price);
 892:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <current_price+0x1>
 896:	8f 93       	push	r24
 898:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current_price>
 89c:	8f 93       	push	r24
 89e:	5f 92       	push	r5
 8a0:	4f 92       	push	r4
 8a2:	7f 92       	push	r7
 8a4:	6f 92       	push	r6
			lcd_putsf(0,1,(unsigned char *)str);
 8a6:	2c d0       	rcall	.+88     	; 0x900 <sprintf>
 8a8:	a3 01       	movw	r20, r6
 8aa:	61 e0       	ldi	r22, 0x01	; 1
 8ac:	80 e0       	ldi	r24, 0x00	; 0
 8ae:	3f dc       	rcall	.-1922   	; 0x12e <_Z9lcd_putsfhhPh>
 8b0:	0f 90       	pop	r0
 8b2:	0f 90       	pop	r0
 8b4:	0f 90       	pop	r0
 8b6:	0f 90       	pop	r0
 8b8:	0f 90       	pop	r0
 8ba:	0f 90       	pop	r0
			
		}
		else if(mode == TOTAL_MODE)
 8bc:	85 ce       	rjmp	.-758    	; 0x5c8 <main+0x5a>
 8be:	03 97       	sbiw	r24, 0x03	; 3
 8c0:	09 f0       	breq	.+2      	; 0x8c4 <main+0x356>
		{

			lcd_putsf(0,0,(unsigned char *)" total sales ");
 8c2:	82 ce       	rjmp	.-764    	; 0x5c8 <main+0x5a>
 8c4:	4c e6       	ldi	r20, 0x6C	; 108
 8c6:	51 e0       	ldi	r21, 0x01	; 1
 8c8:	60 e0       	ldi	r22, 0x00	; 0
 8ca:	80 e0       	ldi	r24, 0x00	; 0
 8cc:	30 dc       	rcall	.-1952   	; 0x12e <_Z9lcd_putsfhhPh>
 8ce:	7c ce       	rjmp	.-776    	; 0x5c8 <main+0x5a>

000008d0 <__adddi3_s8>:
 8d0:	00 24       	eor	r0, r0
 8d2:	a7 fd       	sbrc	r26, 7
 8d4:	00 94       	com	r0
 8d6:	2a 0f       	add	r18, r26
 8d8:	30 1d       	adc	r19, r0
 8da:	40 1d       	adc	r20, r0
 8dc:	50 1d       	adc	r21, r0
 8de:	60 1d       	adc	r22, r0
 8e0:	70 1d       	adc	r23, r0
 8e2:	80 1d       	adc	r24, r0
 8e4:	90 1d       	adc	r25, r0
 8e6:	08 95       	ret

000008e8 <__cmpdi2_s8>:
 8e8:	00 24       	eor	r0, r0
 8ea:	a7 fd       	sbrc	r26, 7
 8ec:	00 94       	com	r0
 8ee:	2a 17       	cp	r18, r26
 8f0:	30 05       	cpc	r19, r0
 8f2:	40 05       	cpc	r20, r0
 8f4:	50 05       	cpc	r21, r0
 8f6:	60 05       	cpc	r22, r0
 8f8:	70 05       	cpc	r23, r0
 8fa:	80 05       	cpc	r24, r0
 8fc:	90 05       	cpc	r25, r0
 8fe:	08 95       	ret

00000900 <sprintf>:
 900:	0f 93       	push	r16
 902:	1f 93       	push	r17
 904:	cf 93       	push	r28
 906:	df 93       	push	r29
 908:	cd b7       	in	r28, 0x3d	; 61
 90a:	de b7       	in	r29, 0x3e	; 62
 90c:	2e 97       	sbiw	r28, 0x0e	; 14
 90e:	0f b6       	in	r0, 0x3f	; 63
 910:	f8 94       	cli
 912:	de bf       	out	0x3e, r29	; 62
 914:	0f be       	out	0x3f, r0	; 63
 916:	cd bf       	out	0x3d, r28	; 61
 918:	0d 89       	ldd	r16, Y+21	; 0x15
 91a:	1e 89       	ldd	r17, Y+22	; 0x16
 91c:	86 e0       	ldi	r24, 0x06	; 6
 91e:	8c 83       	std	Y+4, r24	; 0x04
 920:	1a 83       	std	Y+2, r17	; 0x02
 922:	09 83       	std	Y+1, r16	; 0x01
 924:	8f ef       	ldi	r24, 0xFF	; 255
 926:	9f e7       	ldi	r25, 0x7F	; 127
 928:	9e 83       	std	Y+6, r25	; 0x06
 92a:	8d 83       	std	Y+5, r24	; 0x05
 92c:	ae 01       	movw	r20, r28
 92e:	47 5e       	subi	r20, 0xE7	; 231
 930:	5f 4f       	sbci	r21, 0xFF	; 255
 932:	6f 89       	ldd	r22, Y+23	; 0x17
 934:	78 8d       	ldd	r23, Y+24	; 0x18
 936:	ce 01       	movw	r24, r28
 938:	01 96       	adiw	r24, 0x01	; 1
 93a:	10 d0       	rcall	.+32     	; 0x95c <vfprintf>
 93c:	ef 81       	ldd	r30, Y+7	; 0x07
 93e:	f8 85       	ldd	r31, Y+8	; 0x08
 940:	e0 0f       	add	r30, r16
 942:	f1 1f       	adc	r31, r17
 944:	10 82       	st	Z, r1
 946:	2e 96       	adiw	r28, 0x0e	; 14
 948:	0f b6       	in	r0, 0x3f	; 63
 94a:	f8 94       	cli
 94c:	de bf       	out	0x3e, r29	; 62
 94e:	0f be       	out	0x3f, r0	; 63
 950:	cd bf       	out	0x3d, r28	; 61
 952:	df 91       	pop	r29
 954:	cf 91       	pop	r28
 956:	1f 91       	pop	r17
 958:	0f 91       	pop	r16
 95a:	08 95       	ret

0000095c <vfprintf>:
 95c:	2f 92       	push	r2
 95e:	3f 92       	push	r3
 960:	4f 92       	push	r4
 962:	5f 92       	push	r5
 964:	6f 92       	push	r6
 966:	7f 92       	push	r7
 968:	8f 92       	push	r8
 96a:	9f 92       	push	r9
 96c:	af 92       	push	r10
 96e:	bf 92       	push	r11
 970:	cf 92       	push	r12
 972:	df 92       	push	r13
 974:	ef 92       	push	r14
 976:	ff 92       	push	r15
 978:	0f 93       	push	r16
 97a:	1f 93       	push	r17
 97c:	cf 93       	push	r28
 97e:	df 93       	push	r29
 980:	cd b7       	in	r28, 0x3d	; 61
 982:	de b7       	in	r29, 0x3e	; 62
 984:	2b 97       	sbiw	r28, 0x0b	; 11
 986:	0f b6       	in	r0, 0x3f	; 63
 988:	f8 94       	cli
 98a:	de bf       	out	0x3e, r29	; 62
 98c:	0f be       	out	0x3f, r0	; 63
 98e:	cd bf       	out	0x3d, r28	; 61
 990:	6c 01       	movw	r12, r24
 992:	7b 01       	movw	r14, r22
 994:	8a 01       	movw	r16, r20
 996:	fc 01       	movw	r30, r24
 998:	17 82       	std	Z+7, r1	; 0x07
 99a:	16 82       	std	Z+6, r1	; 0x06
 99c:	83 81       	ldd	r24, Z+3	; 0x03
 99e:	81 ff       	sbrs	r24, 1
 9a0:	bf c1       	rjmp	.+894    	; 0xd20 <vfprintf+0x3c4>
 9a2:	ce 01       	movw	r24, r28
 9a4:	01 96       	adiw	r24, 0x01	; 1
 9a6:	3c 01       	movw	r6, r24
 9a8:	f6 01       	movw	r30, r12
 9aa:	93 81       	ldd	r25, Z+3	; 0x03
 9ac:	f7 01       	movw	r30, r14
 9ae:	93 fd       	sbrc	r25, 3
 9b0:	85 91       	lpm	r24, Z+
 9b2:	93 ff       	sbrs	r25, 3
 9b4:	81 91       	ld	r24, Z+
 9b6:	7f 01       	movw	r14, r30
 9b8:	88 23       	and	r24, r24
 9ba:	09 f4       	brne	.+2      	; 0x9be <vfprintf+0x62>
 9bc:	ad c1       	rjmp	.+858    	; 0xd18 <vfprintf+0x3bc>
 9be:	85 32       	cpi	r24, 0x25	; 37
 9c0:	39 f4       	brne	.+14     	; 0x9d0 <vfprintf+0x74>
 9c2:	93 fd       	sbrc	r25, 3
 9c4:	85 91       	lpm	r24, Z+
 9c6:	93 ff       	sbrs	r25, 3
 9c8:	81 91       	ld	r24, Z+
 9ca:	7f 01       	movw	r14, r30
 9cc:	85 32       	cpi	r24, 0x25	; 37
 9ce:	21 f4       	brne	.+8      	; 0x9d8 <vfprintf+0x7c>
 9d0:	b6 01       	movw	r22, r12
 9d2:	90 e0       	ldi	r25, 0x00	; 0
 9d4:	d6 d1       	rcall	.+940    	; 0xd82 <fputc>
 9d6:	e8 cf       	rjmp	.-48     	; 0x9a8 <vfprintf+0x4c>
 9d8:	91 2c       	mov	r9, r1
 9da:	21 2c       	mov	r2, r1
 9dc:	31 2c       	mov	r3, r1
 9de:	ff e1       	ldi	r31, 0x1F	; 31
 9e0:	f3 15       	cp	r31, r3
 9e2:	d8 f0       	brcs	.+54     	; 0xa1a <vfprintf+0xbe>
 9e4:	8b 32       	cpi	r24, 0x2B	; 43
 9e6:	79 f0       	breq	.+30     	; 0xa06 <vfprintf+0xaa>
 9e8:	38 f4       	brcc	.+14     	; 0x9f8 <vfprintf+0x9c>
 9ea:	80 32       	cpi	r24, 0x20	; 32
 9ec:	79 f0       	breq	.+30     	; 0xa0c <vfprintf+0xb0>
 9ee:	83 32       	cpi	r24, 0x23	; 35
 9f0:	a1 f4       	brne	.+40     	; 0xa1a <vfprintf+0xbe>
 9f2:	23 2d       	mov	r18, r3
 9f4:	20 61       	ori	r18, 0x10	; 16
 9f6:	1d c0       	rjmp	.+58     	; 0xa32 <vfprintf+0xd6>
 9f8:	8d 32       	cpi	r24, 0x2D	; 45
 9fa:	61 f0       	breq	.+24     	; 0xa14 <vfprintf+0xb8>
 9fc:	80 33       	cpi	r24, 0x30	; 48
 9fe:	69 f4       	brne	.+26     	; 0xa1a <vfprintf+0xbe>
 a00:	23 2d       	mov	r18, r3
 a02:	21 60       	ori	r18, 0x01	; 1
 a04:	16 c0       	rjmp	.+44     	; 0xa32 <vfprintf+0xd6>
 a06:	83 2d       	mov	r24, r3
 a08:	82 60       	ori	r24, 0x02	; 2
 a0a:	38 2e       	mov	r3, r24
 a0c:	e3 2d       	mov	r30, r3
 a0e:	e4 60       	ori	r30, 0x04	; 4
 a10:	3e 2e       	mov	r3, r30
 a12:	2a c0       	rjmp	.+84     	; 0xa68 <vfprintf+0x10c>
 a14:	f3 2d       	mov	r31, r3
 a16:	f8 60       	ori	r31, 0x08	; 8
 a18:	1d c0       	rjmp	.+58     	; 0xa54 <vfprintf+0xf8>
 a1a:	37 fc       	sbrc	r3, 7
 a1c:	2d c0       	rjmp	.+90     	; 0xa78 <vfprintf+0x11c>
 a1e:	20 ed       	ldi	r18, 0xD0	; 208
 a20:	28 0f       	add	r18, r24
 a22:	2a 30       	cpi	r18, 0x0A	; 10
 a24:	40 f0       	brcs	.+16     	; 0xa36 <vfprintf+0xda>
 a26:	8e 32       	cpi	r24, 0x2E	; 46
 a28:	b9 f4       	brne	.+46     	; 0xa58 <vfprintf+0xfc>
 a2a:	36 fc       	sbrc	r3, 6
 a2c:	75 c1       	rjmp	.+746    	; 0xd18 <vfprintf+0x3bc>
 a2e:	23 2d       	mov	r18, r3
 a30:	20 64       	ori	r18, 0x40	; 64
 a32:	32 2e       	mov	r3, r18
 a34:	19 c0       	rjmp	.+50     	; 0xa68 <vfprintf+0x10c>
 a36:	36 fe       	sbrs	r3, 6
 a38:	06 c0       	rjmp	.+12     	; 0xa46 <vfprintf+0xea>
 a3a:	8a e0       	ldi	r24, 0x0A	; 10
 a3c:	98 9e       	mul	r9, r24
 a3e:	20 0d       	add	r18, r0
 a40:	11 24       	eor	r1, r1
 a42:	92 2e       	mov	r9, r18
 a44:	11 c0       	rjmp	.+34     	; 0xa68 <vfprintf+0x10c>
 a46:	ea e0       	ldi	r30, 0x0A	; 10
 a48:	2e 9e       	mul	r2, r30
 a4a:	20 0d       	add	r18, r0
 a4c:	11 24       	eor	r1, r1
 a4e:	22 2e       	mov	r2, r18
 a50:	f3 2d       	mov	r31, r3
 a52:	f0 62       	ori	r31, 0x20	; 32
 a54:	3f 2e       	mov	r3, r31
 a56:	08 c0       	rjmp	.+16     	; 0xa68 <vfprintf+0x10c>
 a58:	8c 36       	cpi	r24, 0x6C	; 108
 a5a:	21 f4       	brne	.+8      	; 0xa64 <vfprintf+0x108>
 a5c:	83 2d       	mov	r24, r3
 a5e:	80 68       	ori	r24, 0x80	; 128
 a60:	38 2e       	mov	r3, r24
 a62:	02 c0       	rjmp	.+4      	; 0xa68 <vfprintf+0x10c>
 a64:	88 36       	cpi	r24, 0x68	; 104
 a66:	41 f4       	brne	.+16     	; 0xa78 <vfprintf+0x11c>
 a68:	f7 01       	movw	r30, r14
 a6a:	93 fd       	sbrc	r25, 3
 a6c:	85 91       	lpm	r24, Z+
 a6e:	93 ff       	sbrs	r25, 3
 a70:	81 91       	ld	r24, Z+
 a72:	7f 01       	movw	r14, r30
 a74:	81 11       	cpse	r24, r1
 a76:	b3 cf       	rjmp	.-154    	; 0x9de <vfprintf+0x82>
 a78:	98 2f       	mov	r25, r24
 a7a:	9f 7d       	andi	r25, 0xDF	; 223
 a7c:	95 54       	subi	r25, 0x45	; 69
 a7e:	93 30       	cpi	r25, 0x03	; 3
 a80:	28 f4       	brcc	.+10     	; 0xa8c <vfprintf+0x130>
 a82:	0c 5f       	subi	r16, 0xFC	; 252
 a84:	1f 4f       	sbci	r17, 0xFF	; 255
 a86:	9f e3       	ldi	r25, 0x3F	; 63
 a88:	99 83       	std	Y+1, r25	; 0x01
 a8a:	0d c0       	rjmp	.+26     	; 0xaa6 <vfprintf+0x14a>
 a8c:	83 36       	cpi	r24, 0x63	; 99
 a8e:	31 f0       	breq	.+12     	; 0xa9c <vfprintf+0x140>
 a90:	83 37       	cpi	r24, 0x73	; 115
 a92:	71 f0       	breq	.+28     	; 0xab0 <vfprintf+0x154>
 a94:	83 35       	cpi	r24, 0x53	; 83
 a96:	09 f0       	breq	.+2      	; 0xa9a <vfprintf+0x13e>
 a98:	55 c0       	rjmp	.+170    	; 0xb44 <vfprintf+0x1e8>
 a9a:	20 c0       	rjmp	.+64     	; 0xadc <vfprintf+0x180>
 a9c:	f8 01       	movw	r30, r16
 a9e:	80 81       	ld	r24, Z
 aa0:	89 83       	std	Y+1, r24	; 0x01
 aa2:	0e 5f       	subi	r16, 0xFE	; 254
 aa4:	1f 4f       	sbci	r17, 0xFF	; 255
 aa6:	88 24       	eor	r8, r8
 aa8:	83 94       	inc	r8
 aaa:	91 2c       	mov	r9, r1
 aac:	53 01       	movw	r10, r6
 aae:	12 c0       	rjmp	.+36     	; 0xad4 <vfprintf+0x178>
 ab0:	28 01       	movw	r4, r16
 ab2:	f2 e0       	ldi	r31, 0x02	; 2
 ab4:	4f 0e       	add	r4, r31
 ab6:	51 1c       	adc	r5, r1
 ab8:	f8 01       	movw	r30, r16
 aba:	a0 80       	ld	r10, Z
 abc:	b1 80       	ldd	r11, Z+1	; 0x01
 abe:	36 fe       	sbrs	r3, 6
 ac0:	03 c0       	rjmp	.+6      	; 0xac8 <vfprintf+0x16c>
 ac2:	69 2d       	mov	r22, r9
 ac4:	70 e0       	ldi	r23, 0x00	; 0
 ac6:	02 c0       	rjmp	.+4      	; 0xacc <vfprintf+0x170>
 ac8:	6f ef       	ldi	r22, 0xFF	; 255
 aca:	7f ef       	ldi	r23, 0xFF	; 255
 acc:	c5 01       	movw	r24, r10
 ace:	4e d1       	rcall	.+668    	; 0xd6c <strnlen>
 ad0:	4c 01       	movw	r8, r24
 ad2:	82 01       	movw	r16, r4
 ad4:	f3 2d       	mov	r31, r3
 ad6:	ff 77       	andi	r31, 0x7F	; 127
 ad8:	3f 2e       	mov	r3, r31
 ada:	15 c0       	rjmp	.+42     	; 0xb06 <vfprintf+0x1aa>
 adc:	28 01       	movw	r4, r16
 ade:	22 e0       	ldi	r18, 0x02	; 2
 ae0:	42 0e       	add	r4, r18
 ae2:	51 1c       	adc	r5, r1
 ae4:	f8 01       	movw	r30, r16
 ae6:	a0 80       	ld	r10, Z
 ae8:	b1 80       	ldd	r11, Z+1	; 0x01
 aea:	36 fe       	sbrs	r3, 6
 aec:	03 c0       	rjmp	.+6      	; 0xaf4 <vfprintf+0x198>
 aee:	69 2d       	mov	r22, r9
 af0:	70 e0       	ldi	r23, 0x00	; 0
 af2:	02 c0       	rjmp	.+4      	; 0xaf8 <vfprintf+0x19c>
 af4:	6f ef       	ldi	r22, 0xFF	; 255
 af6:	7f ef       	ldi	r23, 0xFF	; 255
 af8:	c5 01       	movw	r24, r10
 afa:	2d d1       	rcall	.+602    	; 0xd56 <strnlen_P>
 afc:	4c 01       	movw	r8, r24
 afe:	f3 2d       	mov	r31, r3
 b00:	f0 68       	ori	r31, 0x80	; 128
 b02:	3f 2e       	mov	r3, r31
 b04:	82 01       	movw	r16, r4
 b06:	33 fc       	sbrc	r3, 3
 b08:	19 c0       	rjmp	.+50     	; 0xb3c <vfprintf+0x1e0>
 b0a:	82 2d       	mov	r24, r2
 b0c:	90 e0       	ldi	r25, 0x00	; 0
 b0e:	88 16       	cp	r8, r24
 b10:	99 06       	cpc	r9, r25
 b12:	a0 f4       	brcc	.+40     	; 0xb3c <vfprintf+0x1e0>
 b14:	b6 01       	movw	r22, r12
 b16:	80 e2       	ldi	r24, 0x20	; 32
 b18:	90 e0       	ldi	r25, 0x00	; 0
 b1a:	33 d1       	rcall	.+614    	; 0xd82 <fputc>
 b1c:	2a 94       	dec	r2
 b1e:	f5 cf       	rjmp	.-22     	; 0xb0a <vfprintf+0x1ae>
 b20:	f5 01       	movw	r30, r10
 b22:	37 fc       	sbrc	r3, 7
 b24:	85 91       	lpm	r24, Z+
 b26:	37 fe       	sbrs	r3, 7
 b28:	81 91       	ld	r24, Z+
 b2a:	5f 01       	movw	r10, r30
 b2c:	b6 01       	movw	r22, r12
 b2e:	90 e0       	ldi	r25, 0x00	; 0
 b30:	28 d1       	rcall	.+592    	; 0xd82 <fputc>
 b32:	21 10       	cpse	r2, r1
 b34:	2a 94       	dec	r2
 b36:	21 e0       	ldi	r18, 0x01	; 1
 b38:	82 1a       	sub	r8, r18
 b3a:	91 08       	sbc	r9, r1
 b3c:	81 14       	cp	r8, r1
 b3e:	91 04       	cpc	r9, r1
 b40:	79 f7       	brne	.-34     	; 0xb20 <vfprintf+0x1c4>
 b42:	e1 c0       	rjmp	.+450    	; 0xd06 <vfprintf+0x3aa>
 b44:	84 36       	cpi	r24, 0x64	; 100
 b46:	11 f0       	breq	.+4      	; 0xb4c <vfprintf+0x1f0>
 b48:	89 36       	cpi	r24, 0x69	; 105
 b4a:	39 f5       	brne	.+78     	; 0xb9a <vfprintf+0x23e>
 b4c:	f8 01       	movw	r30, r16
 b4e:	37 fe       	sbrs	r3, 7
 b50:	07 c0       	rjmp	.+14     	; 0xb60 <vfprintf+0x204>
 b52:	60 81       	ld	r22, Z
 b54:	71 81       	ldd	r23, Z+1	; 0x01
 b56:	82 81       	ldd	r24, Z+2	; 0x02
 b58:	93 81       	ldd	r25, Z+3	; 0x03
 b5a:	0c 5f       	subi	r16, 0xFC	; 252
 b5c:	1f 4f       	sbci	r17, 0xFF	; 255
 b5e:	08 c0       	rjmp	.+16     	; 0xb70 <vfprintf+0x214>
 b60:	60 81       	ld	r22, Z
 b62:	71 81       	ldd	r23, Z+1	; 0x01
 b64:	07 2e       	mov	r0, r23
 b66:	00 0c       	add	r0, r0
 b68:	88 0b       	sbc	r24, r24
 b6a:	99 0b       	sbc	r25, r25
 b6c:	0e 5f       	subi	r16, 0xFE	; 254
 b6e:	1f 4f       	sbci	r17, 0xFF	; 255
 b70:	f3 2d       	mov	r31, r3
 b72:	ff 76       	andi	r31, 0x6F	; 111
 b74:	3f 2e       	mov	r3, r31
 b76:	97 ff       	sbrs	r25, 7
 b78:	09 c0       	rjmp	.+18     	; 0xb8c <vfprintf+0x230>
 b7a:	90 95       	com	r25
 b7c:	80 95       	com	r24
 b7e:	70 95       	com	r23
 b80:	61 95       	neg	r22
 b82:	7f 4f       	sbci	r23, 0xFF	; 255
 b84:	8f 4f       	sbci	r24, 0xFF	; 255
 b86:	9f 4f       	sbci	r25, 0xFF	; 255
 b88:	f0 68       	ori	r31, 0x80	; 128
 b8a:	3f 2e       	mov	r3, r31
 b8c:	2a e0       	ldi	r18, 0x0A	; 10
 b8e:	30 e0       	ldi	r19, 0x00	; 0
 b90:	a3 01       	movw	r20, r6
 b92:	33 d1       	rcall	.+614    	; 0xdfa <__ultoa_invert>
 b94:	88 2e       	mov	r8, r24
 b96:	86 18       	sub	r8, r6
 b98:	44 c0       	rjmp	.+136    	; 0xc22 <vfprintf+0x2c6>
 b9a:	85 37       	cpi	r24, 0x75	; 117
 b9c:	31 f4       	brne	.+12     	; 0xbaa <vfprintf+0x24e>
 b9e:	23 2d       	mov	r18, r3
 ba0:	2f 7e       	andi	r18, 0xEF	; 239
 ba2:	b2 2e       	mov	r11, r18
 ba4:	2a e0       	ldi	r18, 0x0A	; 10
 ba6:	30 e0       	ldi	r19, 0x00	; 0
 ba8:	25 c0       	rjmp	.+74     	; 0xbf4 <vfprintf+0x298>
 baa:	93 2d       	mov	r25, r3
 bac:	99 7f       	andi	r25, 0xF9	; 249
 bae:	b9 2e       	mov	r11, r25
 bb0:	8f 36       	cpi	r24, 0x6F	; 111
 bb2:	c1 f0       	breq	.+48     	; 0xbe4 <vfprintf+0x288>
 bb4:	18 f4       	brcc	.+6      	; 0xbbc <vfprintf+0x260>
 bb6:	88 35       	cpi	r24, 0x58	; 88
 bb8:	79 f0       	breq	.+30     	; 0xbd8 <vfprintf+0x27c>
 bba:	ae c0       	rjmp	.+348    	; 0xd18 <vfprintf+0x3bc>
 bbc:	80 37       	cpi	r24, 0x70	; 112
 bbe:	19 f0       	breq	.+6      	; 0xbc6 <vfprintf+0x26a>
 bc0:	88 37       	cpi	r24, 0x78	; 120
 bc2:	21 f0       	breq	.+8      	; 0xbcc <vfprintf+0x270>
 bc4:	a9 c0       	rjmp	.+338    	; 0xd18 <vfprintf+0x3bc>
 bc6:	e9 2f       	mov	r30, r25
 bc8:	e0 61       	ori	r30, 0x10	; 16
 bca:	be 2e       	mov	r11, r30
 bcc:	b4 fe       	sbrs	r11, 4
 bce:	0d c0       	rjmp	.+26     	; 0xbea <vfprintf+0x28e>
 bd0:	fb 2d       	mov	r31, r11
 bd2:	f4 60       	ori	r31, 0x04	; 4
 bd4:	bf 2e       	mov	r11, r31
 bd6:	09 c0       	rjmp	.+18     	; 0xbea <vfprintf+0x28e>
 bd8:	34 fe       	sbrs	r3, 4
 bda:	0a c0       	rjmp	.+20     	; 0xbf0 <vfprintf+0x294>
 bdc:	29 2f       	mov	r18, r25
 bde:	26 60       	ori	r18, 0x06	; 6
 be0:	b2 2e       	mov	r11, r18
 be2:	06 c0       	rjmp	.+12     	; 0xbf0 <vfprintf+0x294>
 be4:	28 e0       	ldi	r18, 0x08	; 8
 be6:	30 e0       	ldi	r19, 0x00	; 0
 be8:	05 c0       	rjmp	.+10     	; 0xbf4 <vfprintf+0x298>
 bea:	20 e1       	ldi	r18, 0x10	; 16
 bec:	30 e0       	ldi	r19, 0x00	; 0
 bee:	02 c0       	rjmp	.+4      	; 0xbf4 <vfprintf+0x298>
 bf0:	20 e1       	ldi	r18, 0x10	; 16
 bf2:	32 e0       	ldi	r19, 0x02	; 2
 bf4:	f8 01       	movw	r30, r16
 bf6:	b7 fe       	sbrs	r11, 7
 bf8:	07 c0       	rjmp	.+14     	; 0xc08 <vfprintf+0x2ac>
 bfa:	60 81       	ld	r22, Z
 bfc:	71 81       	ldd	r23, Z+1	; 0x01
 bfe:	82 81       	ldd	r24, Z+2	; 0x02
 c00:	93 81       	ldd	r25, Z+3	; 0x03
 c02:	0c 5f       	subi	r16, 0xFC	; 252
 c04:	1f 4f       	sbci	r17, 0xFF	; 255
 c06:	06 c0       	rjmp	.+12     	; 0xc14 <vfprintf+0x2b8>
 c08:	60 81       	ld	r22, Z
 c0a:	71 81       	ldd	r23, Z+1	; 0x01
 c0c:	80 e0       	ldi	r24, 0x00	; 0
 c0e:	90 e0       	ldi	r25, 0x00	; 0
 c10:	0e 5f       	subi	r16, 0xFE	; 254
 c12:	1f 4f       	sbci	r17, 0xFF	; 255
 c14:	a3 01       	movw	r20, r6
 c16:	f1 d0       	rcall	.+482    	; 0xdfa <__ultoa_invert>
 c18:	88 2e       	mov	r8, r24
 c1a:	86 18       	sub	r8, r6
 c1c:	fb 2d       	mov	r31, r11
 c1e:	ff 77       	andi	r31, 0x7F	; 127
 c20:	3f 2e       	mov	r3, r31
 c22:	36 fe       	sbrs	r3, 6
 c24:	0d c0       	rjmp	.+26     	; 0xc40 <vfprintf+0x2e4>
 c26:	23 2d       	mov	r18, r3
 c28:	2e 7f       	andi	r18, 0xFE	; 254
 c2a:	a2 2e       	mov	r10, r18
 c2c:	89 14       	cp	r8, r9
 c2e:	58 f4       	brcc	.+22     	; 0xc46 <vfprintf+0x2ea>
 c30:	34 fe       	sbrs	r3, 4
 c32:	0b c0       	rjmp	.+22     	; 0xc4a <vfprintf+0x2ee>
 c34:	32 fc       	sbrc	r3, 2
 c36:	09 c0       	rjmp	.+18     	; 0xc4a <vfprintf+0x2ee>
 c38:	83 2d       	mov	r24, r3
 c3a:	8e 7e       	andi	r24, 0xEE	; 238
 c3c:	a8 2e       	mov	r10, r24
 c3e:	05 c0       	rjmp	.+10     	; 0xc4a <vfprintf+0x2ee>
 c40:	b8 2c       	mov	r11, r8
 c42:	a3 2c       	mov	r10, r3
 c44:	03 c0       	rjmp	.+6      	; 0xc4c <vfprintf+0x2f0>
 c46:	b8 2c       	mov	r11, r8
 c48:	01 c0       	rjmp	.+2      	; 0xc4c <vfprintf+0x2f0>
 c4a:	b9 2c       	mov	r11, r9
 c4c:	a4 fe       	sbrs	r10, 4
 c4e:	0f c0       	rjmp	.+30     	; 0xc6e <vfprintf+0x312>
 c50:	fe 01       	movw	r30, r28
 c52:	e8 0d       	add	r30, r8
 c54:	f1 1d       	adc	r31, r1
 c56:	80 81       	ld	r24, Z
 c58:	80 33       	cpi	r24, 0x30	; 48
 c5a:	21 f4       	brne	.+8      	; 0xc64 <vfprintf+0x308>
 c5c:	9a 2d       	mov	r25, r10
 c5e:	99 7e       	andi	r25, 0xE9	; 233
 c60:	a9 2e       	mov	r10, r25
 c62:	09 c0       	rjmp	.+18     	; 0xc76 <vfprintf+0x31a>
 c64:	a2 fe       	sbrs	r10, 2
 c66:	06 c0       	rjmp	.+12     	; 0xc74 <vfprintf+0x318>
 c68:	b3 94       	inc	r11
 c6a:	b3 94       	inc	r11
 c6c:	04 c0       	rjmp	.+8      	; 0xc76 <vfprintf+0x31a>
 c6e:	8a 2d       	mov	r24, r10
 c70:	86 78       	andi	r24, 0x86	; 134
 c72:	09 f0       	breq	.+2      	; 0xc76 <vfprintf+0x31a>
 c74:	b3 94       	inc	r11
 c76:	a3 fc       	sbrc	r10, 3
 c78:	10 c0       	rjmp	.+32     	; 0xc9a <vfprintf+0x33e>
 c7a:	a0 fe       	sbrs	r10, 0
 c7c:	06 c0       	rjmp	.+12     	; 0xc8a <vfprintf+0x32e>
 c7e:	b2 14       	cp	r11, r2
 c80:	80 f4       	brcc	.+32     	; 0xca2 <vfprintf+0x346>
 c82:	28 0c       	add	r2, r8
 c84:	92 2c       	mov	r9, r2
 c86:	9b 18       	sub	r9, r11
 c88:	0d c0       	rjmp	.+26     	; 0xca4 <vfprintf+0x348>
 c8a:	b2 14       	cp	r11, r2
 c8c:	58 f4       	brcc	.+22     	; 0xca4 <vfprintf+0x348>
 c8e:	b6 01       	movw	r22, r12
 c90:	80 e2       	ldi	r24, 0x20	; 32
 c92:	90 e0       	ldi	r25, 0x00	; 0
 c94:	76 d0       	rcall	.+236    	; 0xd82 <fputc>
 c96:	b3 94       	inc	r11
 c98:	f8 cf       	rjmp	.-16     	; 0xc8a <vfprintf+0x32e>
 c9a:	b2 14       	cp	r11, r2
 c9c:	18 f4       	brcc	.+6      	; 0xca4 <vfprintf+0x348>
 c9e:	2b 18       	sub	r2, r11
 ca0:	02 c0       	rjmp	.+4      	; 0xca6 <vfprintf+0x34a>
 ca2:	98 2c       	mov	r9, r8
 ca4:	21 2c       	mov	r2, r1
 ca6:	a4 fe       	sbrs	r10, 4
 ca8:	0f c0       	rjmp	.+30     	; 0xcc8 <vfprintf+0x36c>
 caa:	b6 01       	movw	r22, r12
 cac:	80 e3       	ldi	r24, 0x30	; 48
 cae:	90 e0       	ldi	r25, 0x00	; 0
 cb0:	68 d0       	rcall	.+208    	; 0xd82 <fputc>
 cb2:	a2 fe       	sbrs	r10, 2
 cb4:	16 c0       	rjmp	.+44     	; 0xce2 <vfprintf+0x386>
 cb6:	a1 fc       	sbrc	r10, 1
 cb8:	03 c0       	rjmp	.+6      	; 0xcc0 <vfprintf+0x364>
 cba:	88 e7       	ldi	r24, 0x78	; 120
 cbc:	90 e0       	ldi	r25, 0x00	; 0
 cbe:	02 c0       	rjmp	.+4      	; 0xcc4 <vfprintf+0x368>
 cc0:	88 e5       	ldi	r24, 0x58	; 88
 cc2:	90 e0       	ldi	r25, 0x00	; 0
 cc4:	b6 01       	movw	r22, r12
 cc6:	0c c0       	rjmp	.+24     	; 0xce0 <vfprintf+0x384>
 cc8:	8a 2d       	mov	r24, r10
 cca:	86 78       	andi	r24, 0x86	; 134
 ccc:	51 f0       	breq	.+20     	; 0xce2 <vfprintf+0x386>
 cce:	a1 fe       	sbrs	r10, 1
 cd0:	02 c0       	rjmp	.+4      	; 0xcd6 <vfprintf+0x37a>
 cd2:	8b e2       	ldi	r24, 0x2B	; 43
 cd4:	01 c0       	rjmp	.+2      	; 0xcd8 <vfprintf+0x37c>
 cd6:	80 e2       	ldi	r24, 0x20	; 32
 cd8:	a7 fc       	sbrc	r10, 7
 cda:	8d e2       	ldi	r24, 0x2D	; 45
 cdc:	b6 01       	movw	r22, r12
 cde:	90 e0       	ldi	r25, 0x00	; 0
 ce0:	50 d0       	rcall	.+160    	; 0xd82 <fputc>
 ce2:	89 14       	cp	r8, r9
 ce4:	30 f4       	brcc	.+12     	; 0xcf2 <vfprintf+0x396>
 ce6:	b6 01       	movw	r22, r12
 ce8:	80 e3       	ldi	r24, 0x30	; 48
 cea:	90 e0       	ldi	r25, 0x00	; 0
 cec:	4a d0       	rcall	.+148    	; 0xd82 <fputc>
 cee:	9a 94       	dec	r9
 cf0:	f8 cf       	rjmp	.-16     	; 0xce2 <vfprintf+0x386>
 cf2:	8a 94       	dec	r8
 cf4:	f3 01       	movw	r30, r6
 cf6:	e8 0d       	add	r30, r8
 cf8:	f1 1d       	adc	r31, r1
 cfa:	80 81       	ld	r24, Z
 cfc:	b6 01       	movw	r22, r12
 cfe:	90 e0       	ldi	r25, 0x00	; 0
 d00:	40 d0       	rcall	.+128    	; 0xd82 <fputc>
 d02:	81 10       	cpse	r8, r1
 d04:	f6 cf       	rjmp	.-20     	; 0xcf2 <vfprintf+0x396>
 d06:	22 20       	and	r2, r2
 d08:	09 f4       	brne	.+2      	; 0xd0c <vfprintf+0x3b0>
 d0a:	4e ce       	rjmp	.-868    	; 0x9a8 <vfprintf+0x4c>
 d0c:	b6 01       	movw	r22, r12
 d0e:	80 e2       	ldi	r24, 0x20	; 32
 d10:	90 e0       	ldi	r25, 0x00	; 0
 d12:	37 d0       	rcall	.+110    	; 0xd82 <fputc>
 d14:	2a 94       	dec	r2
 d16:	f7 cf       	rjmp	.-18     	; 0xd06 <vfprintf+0x3aa>
 d18:	f6 01       	movw	r30, r12
 d1a:	86 81       	ldd	r24, Z+6	; 0x06
 d1c:	97 81       	ldd	r25, Z+7	; 0x07
 d1e:	02 c0       	rjmp	.+4      	; 0xd24 <vfprintf+0x3c8>
 d20:	8f ef       	ldi	r24, 0xFF	; 255
 d22:	9f ef       	ldi	r25, 0xFF	; 255
 d24:	2b 96       	adiw	r28, 0x0b	; 11
 d26:	0f b6       	in	r0, 0x3f	; 63
 d28:	f8 94       	cli
 d2a:	de bf       	out	0x3e, r29	; 62
 d2c:	0f be       	out	0x3f, r0	; 63
 d2e:	cd bf       	out	0x3d, r28	; 61
 d30:	df 91       	pop	r29
 d32:	cf 91       	pop	r28
 d34:	1f 91       	pop	r17
 d36:	0f 91       	pop	r16
 d38:	ff 90       	pop	r15
 d3a:	ef 90       	pop	r14
 d3c:	df 90       	pop	r13
 d3e:	cf 90       	pop	r12
 d40:	bf 90       	pop	r11
 d42:	af 90       	pop	r10
 d44:	9f 90       	pop	r9
 d46:	8f 90       	pop	r8
 d48:	7f 90       	pop	r7
 d4a:	6f 90       	pop	r6
 d4c:	5f 90       	pop	r5
 d4e:	4f 90       	pop	r4
 d50:	3f 90       	pop	r3
 d52:	2f 90       	pop	r2
 d54:	08 95       	ret

00000d56 <strnlen_P>:
 d56:	fc 01       	movw	r30, r24
 d58:	05 90       	lpm	r0, Z+
 d5a:	61 50       	subi	r22, 0x01	; 1
 d5c:	70 40       	sbci	r23, 0x00	; 0
 d5e:	01 10       	cpse	r0, r1
 d60:	d8 f7       	brcc	.-10     	; 0xd58 <strnlen_P+0x2>
 d62:	80 95       	com	r24
 d64:	90 95       	com	r25
 d66:	8e 0f       	add	r24, r30
 d68:	9f 1f       	adc	r25, r31
 d6a:	08 95       	ret

00000d6c <strnlen>:
 d6c:	fc 01       	movw	r30, r24
 d6e:	61 50       	subi	r22, 0x01	; 1
 d70:	70 40       	sbci	r23, 0x00	; 0
 d72:	01 90       	ld	r0, Z+
 d74:	01 10       	cpse	r0, r1
 d76:	d8 f7       	brcc	.-10     	; 0xd6e <strnlen+0x2>
 d78:	80 95       	com	r24
 d7a:	90 95       	com	r25
 d7c:	8e 0f       	add	r24, r30
 d7e:	9f 1f       	adc	r25, r31
 d80:	08 95       	ret

00000d82 <fputc>:
 d82:	0f 93       	push	r16
 d84:	1f 93       	push	r17
 d86:	cf 93       	push	r28
 d88:	df 93       	push	r29
 d8a:	fb 01       	movw	r30, r22
 d8c:	23 81       	ldd	r18, Z+3	; 0x03
 d8e:	21 fd       	sbrc	r18, 1
 d90:	03 c0       	rjmp	.+6      	; 0xd98 <fputc+0x16>
 d92:	8f ef       	ldi	r24, 0xFF	; 255
 d94:	9f ef       	ldi	r25, 0xFF	; 255
 d96:	2c c0       	rjmp	.+88     	; 0xdf0 <fputc+0x6e>
 d98:	22 ff       	sbrs	r18, 2
 d9a:	16 c0       	rjmp	.+44     	; 0xdc8 <fputc+0x46>
 d9c:	46 81       	ldd	r20, Z+6	; 0x06
 d9e:	57 81       	ldd	r21, Z+7	; 0x07
 da0:	24 81       	ldd	r18, Z+4	; 0x04
 da2:	35 81       	ldd	r19, Z+5	; 0x05
 da4:	42 17       	cp	r20, r18
 da6:	53 07       	cpc	r21, r19
 da8:	44 f4       	brge	.+16     	; 0xdba <fputc+0x38>
 daa:	a0 81       	ld	r26, Z
 dac:	b1 81       	ldd	r27, Z+1	; 0x01
 dae:	9d 01       	movw	r18, r26
 db0:	2f 5f       	subi	r18, 0xFF	; 255
 db2:	3f 4f       	sbci	r19, 0xFF	; 255
 db4:	31 83       	std	Z+1, r19	; 0x01
 db6:	20 83       	st	Z, r18
 db8:	8c 93       	st	X, r24
 dba:	26 81       	ldd	r18, Z+6	; 0x06
 dbc:	37 81       	ldd	r19, Z+7	; 0x07
 dbe:	2f 5f       	subi	r18, 0xFF	; 255
 dc0:	3f 4f       	sbci	r19, 0xFF	; 255
 dc2:	37 83       	std	Z+7, r19	; 0x07
 dc4:	26 83       	std	Z+6, r18	; 0x06
 dc6:	14 c0       	rjmp	.+40     	; 0xdf0 <fputc+0x6e>
 dc8:	8b 01       	movw	r16, r22
 dca:	ec 01       	movw	r28, r24
 dcc:	fb 01       	movw	r30, r22
 dce:	00 84       	ldd	r0, Z+8	; 0x08
 dd0:	f1 85       	ldd	r31, Z+9	; 0x09
 dd2:	e0 2d       	mov	r30, r0
 dd4:	09 95       	icall
 dd6:	89 2b       	or	r24, r25
 dd8:	e1 f6       	brne	.-72     	; 0xd92 <fputc+0x10>
 dda:	d8 01       	movw	r26, r16
 ddc:	16 96       	adiw	r26, 0x06	; 6
 dde:	8d 91       	ld	r24, X+
 de0:	9c 91       	ld	r25, X
 de2:	17 97       	sbiw	r26, 0x07	; 7
 de4:	01 96       	adiw	r24, 0x01	; 1
 de6:	17 96       	adiw	r26, 0x07	; 7
 de8:	9c 93       	st	X, r25
 dea:	8e 93       	st	-X, r24
 dec:	16 97       	sbiw	r26, 0x06	; 6
 dee:	ce 01       	movw	r24, r28
 df0:	df 91       	pop	r29
 df2:	cf 91       	pop	r28
 df4:	1f 91       	pop	r17
 df6:	0f 91       	pop	r16
 df8:	08 95       	ret

00000dfa <__ultoa_invert>:
 dfa:	fa 01       	movw	r30, r20
 dfc:	aa 27       	eor	r26, r26
 dfe:	28 30       	cpi	r18, 0x08	; 8
 e00:	51 f1       	breq	.+84     	; 0xe56 <__ultoa_invert+0x5c>
 e02:	20 31       	cpi	r18, 0x10	; 16
 e04:	81 f1       	breq	.+96     	; 0xe66 <__ultoa_invert+0x6c>
 e06:	e8 94       	clt
 e08:	6f 93       	push	r22
 e0a:	6e 7f       	andi	r22, 0xFE	; 254
 e0c:	6e 5f       	subi	r22, 0xFE	; 254
 e0e:	7f 4f       	sbci	r23, 0xFF	; 255
 e10:	8f 4f       	sbci	r24, 0xFF	; 255
 e12:	9f 4f       	sbci	r25, 0xFF	; 255
 e14:	af 4f       	sbci	r26, 0xFF	; 255
 e16:	b1 e0       	ldi	r27, 0x01	; 1
 e18:	3e d0       	rcall	.+124    	; 0xe96 <__ultoa_invert+0x9c>
 e1a:	b4 e0       	ldi	r27, 0x04	; 4
 e1c:	3c d0       	rcall	.+120    	; 0xe96 <__ultoa_invert+0x9c>
 e1e:	67 0f       	add	r22, r23
 e20:	78 1f       	adc	r23, r24
 e22:	89 1f       	adc	r24, r25
 e24:	9a 1f       	adc	r25, r26
 e26:	a1 1d       	adc	r26, r1
 e28:	68 0f       	add	r22, r24
 e2a:	79 1f       	adc	r23, r25
 e2c:	8a 1f       	adc	r24, r26
 e2e:	91 1d       	adc	r25, r1
 e30:	a1 1d       	adc	r26, r1
 e32:	6a 0f       	add	r22, r26
 e34:	71 1d       	adc	r23, r1
 e36:	81 1d       	adc	r24, r1
 e38:	91 1d       	adc	r25, r1
 e3a:	a1 1d       	adc	r26, r1
 e3c:	20 d0       	rcall	.+64     	; 0xe7e <__ultoa_invert+0x84>
 e3e:	09 f4       	brne	.+2      	; 0xe42 <__ultoa_invert+0x48>
 e40:	68 94       	set
 e42:	3f 91       	pop	r19
 e44:	2a e0       	ldi	r18, 0x0A	; 10
 e46:	26 9f       	mul	r18, r22
 e48:	11 24       	eor	r1, r1
 e4a:	30 19       	sub	r19, r0
 e4c:	30 5d       	subi	r19, 0xD0	; 208
 e4e:	31 93       	st	Z+, r19
 e50:	de f6       	brtc	.-74     	; 0xe08 <__ultoa_invert+0xe>
 e52:	cf 01       	movw	r24, r30
 e54:	08 95       	ret
 e56:	46 2f       	mov	r20, r22
 e58:	47 70       	andi	r20, 0x07	; 7
 e5a:	40 5d       	subi	r20, 0xD0	; 208
 e5c:	41 93       	st	Z+, r20
 e5e:	b3 e0       	ldi	r27, 0x03	; 3
 e60:	0f d0       	rcall	.+30     	; 0xe80 <__ultoa_invert+0x86>
 e62:	c9 f7       	brne	.-14     	; 0xe56 <__ultoa_invert+0x5c>
 e64:	f6 cf       	rjmp	.-20     	; 0xe52 <__ultoa_invert+0x58>
 e66:	46 2f       	mov	r20, r22
 e68:	4f 70       	andi	r20, 0x0F	; 15
 e6a:	40 5d       	subi	r20, 0xD0	; 208
 e6c:	4a 33       	cpi	r20, 0x3A	; 58
 e6e:	18 f0       	brcs	.+6      	; 0xe76 <__ultoa_invert+0x7c>
 e70:	49 5d       	subi	r20, 0xD9	; 217
 e72:	31 fd       	sbrc	r19, 1
 e74:	40 52       	subi	r20, 0x20	; 32
 e76:	41 93       	st	Z+, r20
 e78:	02 d0       	rcall	.+4      	; 0xe7e <__ultoa_invert+0x84>
 e7a:	a9 f7       	brne	.-22     	; 0xe66 <__ultoa_invert+0x6c>
 e7c:	ea cf       	rjmp	.-44     	; 0xe52 <__ultoa_invert+0x58>
 e7e:	b4 e0       	ldi	r27, 0x04	; 4
 e80:	a6 95       	lsr	r26
 e82:	97 95       	ror	r25
 e84:	87 95       	ror	r24
 e86:	77 95       	ror	r23
 e88:	67 95       	ror	r22
 e8a:	ba 95       	dec	r27
 e8c:	c9 f7       	brne	.-14     	; 0xe80 <__ultoa_invert+0x86>
 e8e:	00 97       	sbiw	r24, 0x00	; 0
 e90:	61 05       	cpc	r22, r1
 e92:	71 05       	cpc	r23, r1
 e94:	08 95       	ret
 e96:	9b 01       	movw	r18, r22
 e98:	ac 01       	movw	r20, r24
 e9a:	0a 2e       	mov	r0, r26
 e9c:	06 94       	lsr	r0
 e9e:	57 95       	ror	r21
 ea0:	47 95       	ror	r20
 ea2:	37 95       	ror	r19
 ea4:	27 95       	ror	r18
 ea6:	ba 95       	dec	r27
 ea8:	c9 f7       	brne	.-14     	; 0xe9c <__ultoa_invert+0xa2>
 eaa:	62 0f       	add	r22, r18
 eac:	73 1f       	adc	r23, r19
 eae:	84 1f       	adc	r24, r20
 eb0:	95 1f       	adc	r25, r21
 eb2:	a0 1d       	adc	r26, r0
 eb4:	08 95       	ret

00000eb6 <_exit>:
 eb6:	f8 94       	cli

00000eb8 <__stop_program>:
 eb8:	ff cf       	rjmp	.-2      	; 0xeb8 <__stop_program>
